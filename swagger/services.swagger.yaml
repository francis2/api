swagger: '2.0'
info:
    title: Tradovate API
    description: Tradovate API
    version: "1.0.0"
host: live-api-d.tradovate.com
schemes:
    - https
basePath: /v1
consumes:
    - application/json
produces:
    - application/json
securityDefinitions:
    bearer_access_token:
        type: apiKey
        name: Authorization
        in: header
paths:
    /auth/renewaccesstoken:
        get:
            operationId: renewAccessToken
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/RenewAccessToken'
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AccessTokenResponse'
    /account/deps:
        get:
            description: Returns all entities of Account type related to User type
            operationId: getOwnedAccounts
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Account'
    /account/find:
        get:
            description: Finds an entity of Account type by its name
            operationId: findAccount
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Account'
    /account/item:
        get:
            description: Finds an entity of Account type by its id
            operationId: getAccount
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Account'
    /account/items:
        get:
            description: Finds multiple entities of Account type by its ids
            operationId: getAccounts
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Account'
    /account/ldeps:
        get:
            description: Returns all entities of Account type related to multiple entities of User type
            operationId: getOwnedAccountsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Account'
    /account/list:
        get:
            description: Returns all entities of Account type
            operationId: getAllAccounts
            security:
                - bearer_access_token: []
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Account'
    /account/suggest:
        get:
            description: Returns entities of Account type filtered by occurence of a text in one of its fields
            operationId: suggestAccounts
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Account'
    /cashBalanceLog/deps:
        get:
            description: Returns all entities of CashBalanceLog type related to Account type
            operationId: getOwnedCashBalanceLogs
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Account entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CashBalanceLog'
    /cashBalanceLog/item:
        get:
            description: Finds an entity of CashBalanceLog type by its id
            operationId: getCashBalanceLog
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/CashBalanceLog'
    /cashBalanceLog/items:
        get:
            description: Finds multiple entities of CashBalanceLog type by its ids
            operationId: getCashBalanceLogs
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CashBalanceLog'
    /cashBalanceLog/ldeps:
        get:
            description: Returns all entities of CashBalanceLog type related to multiple entities of Account type
            operationId: getOwnedCashBalanceLogsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Account entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CashBalanceLog'
    /cashBalance/deps:
        get:
            description: Returns all entities of CashBalance type related to Account type
            operationId: getOwnedCashBalances
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Account entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CashBalance'
    /cashBalance/getcashbalancesnapshot:
        post:
            operationId: getCashBalanceSnapshot
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/GetCashBalanceSnapshot'
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/CashBalanceSnapshot'
    /cashBalance/item:
        get:
            description: Finds an entity of CashBalance type by its id
            operationId: getCashBalance
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/CashBalance'
    /cashBalance/items:
        get:
            description: Finds multiple entities of CashBalance type by its ids
            operationId: getCashBalances
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CashBalance'
    /cashBalance/ldeps:
        get:
            description: Returns all entities of CashBalance type related to multiple entities of Account type
            operationId: getOwnedCashBalancesBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Account entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CashBalance'
    /cashBalance/list:
        get:
            description: Returns all entities of CashBalance type
            operationId: getAllCashBalances
            security:
                - bearer_access_token: []
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CashBalance'
    /marginSnapshot/deps:
        get:
            description: Returns all entities of MarginSnapshot type related to Account type
            operationId: getOwnedMarginSnapshots
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Account entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarginSnapshot'
    /marginSnapshot/item:
        get:
            description: Finds an entity of MarginSnapshot type by its id
            operationId: getMarginSnapshot
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarginSnapshot'
    /marginSnapshot/items:
        get:
            description: Finds multiple entities of MarginSnapshot type by its ids
            operationId: getMarginSnapshots
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarginSnapshot'
    /marginSnapshot/ldeps:
        get:
            description: Returns all entities of MarginSnapshot type related to multiple entities of Account type
            operationId: getOwnedMarginSnapshotsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Account entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarginSnapshot'
    /marginSnapshot/list:
        get:
            description: Returns all entities of MarginSnapshot type
            operationId: getAllMarginSnapshots
            security:
                - bearer_access_token: []
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarginSnapshot'
    /tradingPermission/deps:
        get:
            description: Returns all entities of TradingPermission type related to User type
            operationId: getOwnedTradingPermissions
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradingPermission'
    /tradingPermission/item:
        get:
            description: Finds an entity of TradingPermission type by its id
            operationId: getTradingPermission
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradingPermission'
    /tradingPermission/items:
        get:
            description: Finds multiple entities of TradingPermission type by its ids
            operationId: getTradingPermissions
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradingPermission'
    /tradingPermission/ldeps:
        get:
            description: Returns all entities of TradingPermission type related to multiple entities of User type
            operationId: getOwnedTradingPermissionsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradingPermission'
    /tradingPermission/list:
        get:
            description: Returns all entities of TradingPermission type
            operationId: getAllTradingPermissions
            security:
                - bearer_access_token: []
            tags:
                - Accounting
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradingPermission'
    /adminAlertSignal/completealertsignal:
        post:
            operationId: completeAlertSignal
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/CompleteAlertSignal'
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AdminAlertSignalResponse'
    /adminAlertSignal/deps:
        get:
            description: Returns all entities of AdminAlertSignal type related to AdminAlert type
            operationId: getOwnedAdminAlertSignals
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of AdminAlert entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AdminAlertSignal'
    /adminAlertSignal/item:
        get:
            description: Finds an entity of AdminAlertSignal type by its id
            operationId: getAdminAlertSignal
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AdminAlertSignal'
    /adminAlertSignal/items:
        get:
            description: Finds multiple entities of AdminAlertSignal type by its ids
            operationId: getAdminAlertSignals
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AdminAlertSignal'
    /adminAlertSignal/ldeps:
        get:
            description: Returns all entities of AdminAlertSignal type related to multiple entities of AdminAlert type
            operationId: getOwnedAdminAlertSignalsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of AdminAlert entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AdminAlertSignal'
    /adminAlertSignal/list:
        get:
            description: Returns all entities of AdminAlertSignal type
            operationId: getAllAdminAlertSignals
            security:
                - bearer_access_token: []
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AdminAlertSignal'
    /adminAlertSignal/takealertsignalownership:
        post:
            operationId: takeAlertSignalOwnership
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TakeAlertSignalOwnership'
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AdminAlertSignalResponse'
    /alertSignal/deps:
        get:
            description: Returns all entities of AlertSignal type related to Alert type
            operationId: getOwnedAlertSignals
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Alert entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AlertSignal'
    /alertSignal/item:
        get:
            description: Finds an entity of AlertSignal type by its id
            operationId: getAlertSignal
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AlertSignal'
    /alertSignal/items:
        get:
            description: Finds multiple entities of AlertSignal type by its ids
            operationId: getAlertSignals
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AlertSignal'
    /alertSignal/ldeps:
        get:
            description: Returns all entities of AlertSignal type related to multiple entities of Alert type
            operationId: getOwnedAlertSignalsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Alert entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AlertSignal'
    /alertSignal/list:
        get:
            description: Returns all entities of AlertSignal type
            operationId: getAllAlertSignals
            security:
                - bearer_access_token: []
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AlertSignal'
    /alert/createalert:
        post:
            operationId: createAlert
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/CreateAlert'
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AlertResponse'
    /alert/deletealert:
        post:
            operationId: deleteAlert
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/DeleteAlert'
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AlertResponse'
    /alert/deps:
        get:
            description: Returns all entities of Alert type related to User type
            operationId: getOwnedAlerts
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Alert'
    /alert/dismissalert:
        post:
            operationId: dismissAlert
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/DismissAlert'
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AlertResponse'
    /alert/item:
        get:
            description: Finds an entity of Alert type by its id
            operationId: getAlert
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Alert'
    /alert/items:
        get:
            description: Finds multiple entities of Alert type by its ids
            operationId: getAlerts
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Alert'
    /alert/ldeps:
        get:
            description: Returns all entities of Alert type related to multiple entities of User type
            operationId: getOwnedAlertsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Alert'
    /alert/list:
        get:
            description: Returns all entities of Alert type
            operationId: getAllAlerts
            security:
                - bearer_access_token: []
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Alert'
    /alert/markreadalertsignal:
        post:
            operationId: markReadAlertSignal
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/MarkReadAlertSignal'
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AlertResponse'
    /alert/modifyalert:
        post:
            operationId: modifyAlert
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ModifyAlert'
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AlertResponse'
    /alert/resetalert:
        post:
            operationId: resetAlert
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ResetAlert'
            tags:
                - Alerts
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AlertResponse'
    /auth/accesstokenrequest:
        post:
            operationId: accessTokenRequest
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AccessTokenRequest'
            tags:
                - Authentication
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AccessTokenResponse'
    /chatMessage/deps:
        get:
            description: Returns all entities of ChatMessage type related to Chat type
            operationId: getOwnedChatMessages
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Chat entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ChatMessage'
    /chatMessage/item:
        get:
            description: Finds an entity of ChatMessage type by its id
            operationId: getChatMessage
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ChatMessage'
    /chatMessage/items:
        get:
            description: Finds multiple entities of ChatMessage type by its ids
            operationId: getChatMessages
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ChatMessage'
    /chatMessage/ldeps:
        get:
            description: Returns all entities of ChatMessage type related to multiple entities of Chat type
            operationId: getOwnedChatMessagesBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Chat entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ChatMessage'
    /chat/closechat:
        post:
            operationId: closeChat
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/CloseChat'
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ChatResponse'
    /chat/deps:
        get:
            description: Returns all entities of Chat type related to User type
            operationId: getOwnedChats
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Chat'
    /chat/item:
        get:
            description: Finds an entity of Chat type by its id
            operationId: getChat
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Chat'
    /chat/items:
        get:
            description: Finds multiple entities of Chat type by its ids
            operationId: getChats
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Chat'
    /chat/ldeps:
        get:
            description: Returns all entities of Chat type related to multiple entities of User type
            operationId: getOwnedChatsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Chat'
    /chat/list:
        get:
            description: Returns all entities of Chat type
            operationId: getAllChats
            security:
                - bearer_access_token: []
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Chat'
    /chat/markasreadchatmessage:
        post:
            operationId: markAsReadChatMessage
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/MarkAsReadChatMessage'
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ChatMessageResponse'
    /chat/postchatmessage:
        post:
            operationId: postChatMessage
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/PostChatMessage'
            tags:
                - Chat
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ChatMessageResponse'
    /adminAlert/find:
        get:
            description: Finds an entity of AdminAlert type by its name
            operationId: findAdminAlert
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AdminAlert'
    /adminAlert/item:
        get:
            description: Finds an entity of AdminAlert type by its id
            operationId: getAdminAlert
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AdminAlert'
    /adminAlert/items:
        get:
            description: Finds multiple entities of AdminAlert type by its ids
            operationId: getAdminAlerts
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AdminAlert'
    /adminAlert/list:
        get:
            description: Returns all entities of AdminAlert type
            operationId: getAllAdminAlerts
            security:
                - bearer_access_token: []
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AdminAlert'
    /adminAlert/suggest:
        get:
            description: Returns entities of AdminAlert type filtered by occurence of a text in one of its fields
            operationId: suggestAdminAlerts
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/AdminAlert'
    /clearingHouse/find:
        get:
            description: Finds an entity of ClearingHouse type by its name
            operationId: findClearingHouse
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ClearingHouse'
    /clearingHouse/item:
        get:
            description: Finds an entity of ClearingHouse type by its id
            operationId: getClearingHouse
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ClearingHouse'
    /clearingHouse/items:
        get:
            description: Finds multiple entities of ClearingHouse type by its ids
            operationId: getClearingHouses
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ClearingHouse'
    /clearingHouse/list:
        get:
            description: Returns all entities of ClearingHouse type
            operationId: getAllClearingHouses
            security:
                - bearer_access_token: []
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ClearingHouse'
    /clearingHouse/suggest:
        get:
            description: Returns entities of ClearingHouse type filtered by occurence of a text in one of its fields
            operationId: suggestClearingHouses
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ClearingHouse'
    /orderStrategyType/find:
        get:
            description: Finds an entity of OrderStrategyType type by its name
            operationId: findOrderStrategyType
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OrderStrategyType'
    /orderStrategyType/item:
        get:
            description: Finds an entity of OrderStrategyType type by its id
            operationId: getOrderStrategyType
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OrderStrategyType'
    /orderStrategyType/items:
        get:
            description: Finds multiple entities of OrderStrategyType type by its ids
            operationId: getOrderStrategyTypes
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyType'
    /orderStrategyType/list:
        get:
            description: Returns all entities of OrderStrategyType type
            operationId: getAllOrderStrategyTypes
            security:
                - bearer_access_token: []
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyType'
    /orderStrategyType/suggest:
        get:
            description: Returns entities of OrderStrategyType type filtered by occurence of a text in one of its fields
            operationId: suggestOrderStrategyTypes
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyType'
    /property/find:
        get:
            description: Finds an entity of Property type by its name
            operationId: findProperty
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Property'
    /property/item:
        get:
            description: Finds an entity of Property type by its id
            operationId: getProperty
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Property'
    /property/items:
        get:
            description: Finds multiple entities of Property type by its ids
            operationId: getProperties
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Property'
    /property/list:
        get:
            description: Returns all entities of Property type
            operationId: getAllProperties
            security:
                - bearer_access_token: []
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Property'
    /property/suggest:
        get:
            description: Returns entities of Property type filtered by occurence of a text in one of its fields
            operationId: suggestProperties
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Configuration
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Property'
    /contractGroup/find:
        get:
            description: Finds an entity of ContractGroup type by its name
            operationId: findContractGroup
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ContractGroup'
    /contractGroup/item:
        get:
            description: Finds an entity of ContractGroup type by its id
            operationId: getContractGroup
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ContractGroup'
    /contractGroup/items:
        get:
            description: Finds multiple entities of ContractGroup type by its ids
            operationId: getContractGroups
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContractGroup'
    /contractGroup/list:
        get:
            description: Returns all entities of ContractGroup type
            operationId: getAllContractGroups
            security:
                - bearer_access_token: []
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContractGroup'
    /contractGroup/suggest:
        get:
            description: Returns entities of ContractGroup type filtered by occurence of a text in one of its fields
            operationId: suggestContractGroups
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContractGroup'
    /contractMaturity/deps:
        get:
            description: Returns all entities of ContractMaturity type related to Product type
            operationId: getOwnedContractMaturities
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Product entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContractMaturity'
    /contractMaturity/item:
        get:
            description: Finds an entity of ContractMaturity type by its id
            operationId: getContractMaturity
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ContractMaturity'
    /contractMaturity/items:
        get:
            description: Finds multiple entities of ContractMaturity type by its ids
            operationId: getContractMaturities
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContractMaturity'
    /contractMaturity/ldeps:
        get:
            description: Returns all entities of ContractMaturity type related to multiple entities of Product type
            operationId: getOwnedContractMaturitiesBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Product entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContractMaturity'
    /contract/deps:
        get:
            description: Returns all entities of Contract type related to ContractMaturity type
            operationId: getOwnedContracts
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of ContractMaturity entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Contract'
    /contract/find:
        get:
            description: Finds an entity of Contract type by its name
            operationId: findContract
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Contract'
    /contract/getproductfeeparams:
        post:
            operationId: getProductFeeParams
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/GetProductFeeParams'
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ProductFeeParamsResponse'
    /contract/item:
        get:
            description: Finds an entity of Contract type by its id
            operationId: getContract
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Contract'
    /contract/items:
        get:
            description: Finds multiple entities of Contract type by its ids
            operationId: getContracts
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Contract'
    /contract/ldeps:
        get:
            description: Returns all entities of Contract type related to multiple entities of ContractMaturity type
            operationId: getOwnedContractsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of ContractMaturity entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Contract'
    /contract/rollcontract:
        post:
            operationId: rollContract
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/RollContract'
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/RollContractResponse'
    /contract/suggest:
        get:
            description: Returns entities of Contract type filtered by occurence of a text in one of its fields
            operationId: suggestContracts
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Contract'
    /currencyRate/deps:
        get:
            description: Returns all entities of CurrencyRate type related to Currency type
            operationId: getOwnedCurrencyRates
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Currency entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CurrencyRate'
    /currencyRate/item:
        get:
            description: Finds an entity of CurrencyRate type by its id
            operationId: getCurrencyRate
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/CurrencyRate'
    /currencyRate/items:
        get:
            description: Finds multiple entities of CurrencyRate type by its ids
            operationId: getCurrencyRates
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CurrencyRate'
    /currencyRate/ldeps:
        get:
            description: Returns all entities of CurrencyRate type related to multiple entities of Currency type
            operationId: getOwnedCurrencyRatesBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Currency entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CurrencyRate'
    /currencyRate/list:
        get:
            description: Returns all entities of CurrencyRate type
            operationId: getAllCurrencyRates
            security:
                - bearer_access_token: []
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CurrencyRate'
    /currency/find:
        get:
            description: Finds an entity of Currency type by its name
            operationId: findCurrency
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Currency'
    /currency/item:
        get:
            description: Finds an entity of Currency type by its id
            operationId: getCurrency
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Currency'
    /currency/items:
        get:
            description: Finds multiple entities of Currency type by its ids
            operationId: getCurrencies
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Currency'
    /currency/list:
        get:
            description: Returns all entities of Currency type
            operationId: getAllCurrencies
            security:
                - bearer_access_token: []
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Currency'
    /currency/suggest:
        get:
            description: Returns entities of Currency type filtered by occurence of a text in one of its fields
            operationId: suggestCurrencies
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Currency'
    /exchange/find:
        get:
            description: Finds an entity of Exchange type by its name
            operationId: findExchange
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Exchange'
    /exchange/item:
        get:
            description: Finds an entity of Exchange type by its id
            operationId: getExchange
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Exchange'
    /exchange/items:
        get:
            description: Finds multiple entities of Exchange type by its ids
            operationId: getExchanges
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Exchange'
    /exchange/list:
        get:
            description: Returns all entities of Exchange type
            operationId: getAllExchanges
            security:
                - bearer_access_token: []
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Exchange'
    /exchange/suggest:
        get:
            description: Returns entities of Exchange type filtered by occurence of a text in one of its fields
            operationId: suggestExchanges
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Exchange'
    /productSession/deps:
        get:
            description: Returns all entities of ProductSession type related to Product type
            operationId: getOwnedProductSessions
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Product entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ProductSession'
    /productSession/item:
        get:
            description: Finds an entity of ProductSession type by its id
            operationId: getProductSession
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ProductSession'
    /productSession/items:
        get:
            description: Finds multiple entities of ProductSession type by its ids
            operationId: getProductSessions
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ProductSession'
    /productSession/ldeps:
        get:
            description: Returns all entities of ProductSession type related to multiple entities of Product type
            operationId: getOwnedProductSessionsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Product entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ProductSession'
    /product/deps:
        get:
            description: Returns all entities of Product type related to Exchange type
            operationId: getOwnedProducts
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Exchange entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Product'
    /product/find:
        get:
            description: Finds an entity of Product type by its name
            operationId: findProduct
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Product'
    /product/item:
        get:
            description: Finds an entity of Product type by its id
            operationId: getProduct
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Product'
    /product/items:
        get:
            description: Finds multiple entities of Product type by its ids
            operationId: getProducts
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Product'
    /product/ldeps:
        get:
            description: Returns all entities of Product type related to multiple entities of Exchange type
            operationId: getOwnedProductsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Exchange entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Product'
    /product/list:
        get:
            description: Returns all entities of Product type
            operationId: getAllProducts
            security:
                - bearer_access_token: []
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Product'
    /product/suggest:
        get:
            description: Returns entities of Product type filtered by occurence of a text in one of its fields
            operationId: suggestProducts
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Product'
    /spreadDefinition/item:
        get:
            description: Finds an entity of SpreadDefinition type by its id
            operationId: getSpreadDefinition
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/SpreadDefinition'
    /spreadDefinition/items:
        get:
            description: Finds multiple entities of SpreadDefinition type by its ids
            operationId: getSpreadDefinitions
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - ContractLibrary
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/SpreadDefinition'
    /marketDataSubscriptionExchangeScope/find:
        get:
            description: Finds an entity of MarketDataSubscriptionExchangeScope type by its name
            operationId: findMarketDataSubscriptionExchangeScope
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarketDataSubscriptionExchangeScope'
    /marketDataSubscriptionExchangeScope/item:
        get:
            description: Finds an entity of MarketDataSubscriptionExchangeScope type by its id
            operationId: getMarketDataSubscriptionExchangeScope
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarketDataSubscriptionExchangeScope'
    /marketDataSubscriptionExchangeScope/items:
        get:
            description: Finds multiple entities of MarketDataSubscriptionExchangeScope type by its ids
            operationId: getMarketDataSubscriptionExchangeScopes
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscriptionExchangeScope'
    /marketDataSubscriptionExchangeScope/list:
        get:
            description: Returns all entities of MarketDataSubscriptionExchangeScope type
            operationId: getAllMarketDataSubscriptionExchangeScopes
            security:
                - bearer_access_token: []
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscriptionExchangeScope'
    /marketDataSubscriptionExchangeScope/suggest:
        get:
            description: Returns entities of MarketDataSubscriptionExchangeScope type filtered by occurence of a text in one of its fields
            operationId: suggestMarketDataSubscriptionExchangeScopes
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscriptionExchangeScope'
    /marketDataSubscriptionPlan/find:
        get:
            description: Finds an entity of MarketDataSubscriptionPlan type by its name
            operationId: findMarketDataSubscriptionPlan
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarketDataSubscriptionPlan'
    /marketDataSubscriptionPlan/item:
        get:
            description: Finds an entity of MarketDataSubscriptionPlan type by its id
            operationId: getMarketDataSubscriptionPlan
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarketDataSubscriptionPlan'
    /marketDataSubscriptionPlan/items:
        get:
            description: Finds multiple entities of MarketDataSubscriptionPlan type by its ids
            operationId: getMarketDataSubscriptionPlans
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscriptionPlan'
    /marketDataSubscriptionPlan/list:
        get:
            description: Returns all entities of MarketDataSubscriptionPlan type
            operationId: getAllMarketDataSubscriptionPlans
            security:
                - bearer_access_token: []
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscriptionPlan'
    /marketDataSubscriptionPlan/suggest:
        get:
            description: Returns entities of MarketDataSubscriptionPlan type filtered by occurence of a text in one of its fields
            operationId: suggestMarketDataSubscriptionPlans
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscriptionPlan'
    /tradovateSubscriptionPlan/find:
        get:
            description: Finds an entity of TradovateSubscriptionPlan type by its name
            operationId: findTradovateSubscriptionPlan
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradovateSubscriptionPlan'
    /tradovateSubscriptionPlan/item:
        get:
            description: Finds an entity of TradovateSubscriptionPlan type by its id
            operationId: getTradovateSubscriptionPlan
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradovateSubscriptionPlan'
    /tradovateSubscriptionPlan/items:
        get:
            description: Finds multiple entities of TradovateSubscriptionPlan type by its ids
            operationId: getTradovateSubscriptionPlans
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradovateSubscriptionPlan'
    /tradovateSubscriptionPlan/list:
        get:
            description: Returns all entities of TradovateSubscriptionPlan type
            operationId: getAllTradovateSubscriptionPlans
            security:
                - bearer_access_token: []
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradovateSubscriptionPlan'
    /tradovateSubscriptionPlan/suggest:
        get:
            description: Returns entities of TradovateSubscriptionPlan type filtered by occurence of a text in one of its fields
            operationId: suggestTradovateSubscriptionPlans
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Fees
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradovateSubscriptionPlan'
    /newsStory/find:
        get:
            description: Finds an entity of NewsStory type by its name
            operationId: findNewsStory
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - News
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/NewsStory'
    /newsStory/item:
        get:
            description: Finds an entity of NewsStory type by its id
            operationId: getNewsStory
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - News
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/NewsStory'
    /newsStory/items:
        get:
            description: Finds multiple entities of NewsStory type by its ids
            operationId: getNewsStories
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - News
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/NewsStory'
    /newsStory/list:
        get:
            description: Returns all entities of NewsStory type
            operationId: getAllNewsStories
            security:
                - bearer_access_token: []
            tags:
                - News
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/NewsStory'
    /newsStory/suggest:
        get:
            description: Returns entities of NewsStory type filtered by occurence of a text in one of its fields
            operationId: suggestNewsStories
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - News
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/NewsStory'
    /commandReport/deps:
        get:
            description: Returns all entities of CommandReport type related to Command type
            operationId: getOwnedCommandReports
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Command entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CommandReport'
    /commandReport/item:
        get:
            description: Finds an entity of CommandReport type by its id
            operationId: getCommandReport
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/CommandReport'
    /commandReport/items:
        get:
            description: Finds multiple entities of CommandReport type by its ids
            operationId: getCommandReports
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CommandReport'
    /commandReport/ldeps:
        get:
            description: Returns all entities of CommandReport type related to multiple entities of Command type
            operationId: getOwnedCommandReportsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Command entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CommandReport'
    /commandReport/list:
        get:
            description: Returns all entities of CommandReport type
            operationId: getAllCommandReports
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CommandReport'
    /command/deps:
        get:
            description: Returns all entities of Command type related to Order type
            operationId: getOwnedCommands
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Order entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Command'
    /command/item:
        get:
            description: Finds an entity of Command type by its id
            operationId: getCommand
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Command'
    /command/items:
        get:
            description: Finds multiple entities of Command type by its ids
            operationId: getCommands
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Command'
    /command/ldeps:
        get:
            description: Returns all entities of Command type related to multiple entities of Order type
            operationId: getOwnedCommandsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Order entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Command'
    /command/list:
        get:
            description: Returns all entities of Command type
            operationId: getAllCommands
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Command'
    /executionReport/deps:
        get:
            description: Returns all entities of ExecutionReport type related to Command type
            operationId: getOwnedExecutionReports
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Command entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ExecutionReport'
    /executionReport/find:
        get:
            description: Finds an entity of ExecutionReport type by its name
            operationId: findExecutionReport
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ExecutionReport'
    /executionReport/item:
        get:
            description: Finds an entity of ExecutionReport type by its id
            operationId: getExecutionReport
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ExecutionReport'
    /executionReport/items:
        get:
            description: Finds multiple entities of ExecutionReport type by its ids
            operationId: getExecutionReports
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ExecutionReport'
    /executionReport/ldeps:
        get:
            description: Returns all entities of ExecutionReport type related to multiple entities of Command type
            operationId: getOwnedExecutionReportsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Command entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ExecutionReport'
    /executionReport/list:
        get:
            description: Returns all entities of ExecutionReport type
            operationId: getAllExecutionReports
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ExecutionReport'
    /executionReport/suggest:
        get:
            description: Returns entities of ExecutionReport type filtered by occurence of a text in one of its fields
            operationId: suggestExecutionReports
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ExecutionReport'
    /fillFee/deps:
        get:
            description: Returns all entities of FillFee type related to Fill type
            operationId: getOwnedFillFees
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Fill entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/FillFee'
    /fillFee/item:
        get:
            description: Finds an entity of FillFee type by its id
            operationId: getFillFee
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/FillFee'
    /fillFee/items:
        get:
            description: Finds multiple entities of FillFee type by its ids
            operationId: getFillFees
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/FillFee'
    /fillFee/ldeps:
        get:
            description: Returns all entities of FillFee type related to multiple entities of Fill type
            operationId: getOwnedFillFeesBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Fill entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/FillFee'
    /fillFee/list:
        get:
            description: Returns all entities of FillFee type
            operationId: getAllFillFees
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/FillFee'
    /fill/deps:
        get:
            description: Returns all entities of Fill type related to Order type
            operationId: getOwnedFills
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Order entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Fill'
    /fill/item:
        get:
            description: Finds an entity of Fill type by its id
            operationId: getFill
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Fill'
    /fill/items:
        get:
            description: Finds multiple entities of Fill type by its ids
            operationId: getFills
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Fill'
    /fill/ldeps:
        get:
            description: Returns all entities of Fill type related to multiple entities of Order type
            operationId: getOwnedFillsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Order entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Fill'
    /fill/list:
        get:
            description: Returns all entities of Fill type
            operationId: getAllFills
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Fill'
    /orderStrategyLink/deps:
        get:
            description: Returns all entities of OrderStrategyLink type related to OrderStrategy type
            operationId: getOwnedOrderStrategyLinks
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of OrderStrategy entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyLink'
    /orderStrategyLink/item:
        get:
            description: Finds an entity of OrderStrategyLink type by its id
            operationId: getOrderStrategyLink
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OrderStrategyLink'
    /orderStrategyLink/items:
        get:
            description: Finds multiple entities of OrderStrategyLink type by its ids
            operationId: getOrderStrategyLinks
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyLink'
    /orderStrategyLink/ldeps:
        get:
            description: Returns all entities of OrderStrategyLink type related to multiple entities of OrderStrategy type
            operationId: getOwnedOrderStrategyLinksBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of OrderStrategy entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyLink'
    /orderStrategyLink/list:
        get:
            description: Returns all entities of OrderStrategyLink type
            operationId: getAllOrderStrategyLinks
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyLink'
    /orderStrategyLog/deps:
        get:
            description: Returns all entities of OrderStrategyLog type related to OrderStrategy type
            operationId: getOwnedOrderStrategyLogs
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of OrderStrategy entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyLog'
    /orderStrategyLog/item:
        get:
            description: Finds an entity of OrderStrategyLog type by its id
            operationId: getOrderStrategyLog
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OrderStrategyLog'
    /orderStrategyLog/items:
        get:
            description: Finds multiple entities of OrderStrategyLog type by its ids
            operationId: getOrderStrategyLogs
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyLog'
    /orderStrategyLog/ldeps:
        get:
            description: Returns all entities of OrderStrategyLog type related to multiple entities of OrderStrategy type
            operationId: getOwnedOrderStrategyLogsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of OrderStrategy entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyLog'
    /orderStrategyLog/list:
        get:
            description: Returns all entities of OrderStrategyLog type
            operationId: getAllOrderStrategyLogs
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategyLog'
    /orderStrategy/deps:
        get:
            description: Returns all entities of OrderStrategy type related to Account type
            operationId: getOwnedOrderStrategies
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Account entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategy'
    /orderStrategy/interruptorderstrategy:
        post:
            operationId: interruptOrderStrategy
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/InterruptOrderStrategy'
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OrderStrategyStatusResponse'
    /orderStrategy/item:
        get:
            description: Finds an entity of OrderStrategy type by its id
            operationId: getOrderStrategy
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OrderStrategy'
    /orderStrategy/items:
        get:
            description: Finds multiple entities of OrderStrategy type by its ids
            operationId: getOrderStrategies
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategy'
    /orderStrategy/ldeps:
        get:
            description: Returns all entities of OrderStrategy type related to multiple entities of Account type
            operationId: getOwnedOrderStrategiesBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Account entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategy'
    /orderStrategy/list:
        get:
            description: Returns all entities of OrderStrategy type
            operationId: getAllOrderStrategies
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderStrategy'
    /orderStrategy/modifyorderstrategy:
        post:
            operationId: modifyOrderStrategy
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ModifyOrderStrategy'
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OrderStrategyStatusResponse'
    /orderStrategy/startorderstrategy:
        post:
            operationId: startOrderStrategy
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StartOrderStrategy'
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OrderStrategyStatusResponse'
    /orderVersion/deps:
        get:
            description: Returns all entities of OrderVersion type related to Order type
            operationId: getOwnedOrderVersions
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Order entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderVersion'
    /orderVersion/item:
        get:
            description: Finds an entity of OrderVersion type by its id
            operationId: getOrderVersion
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OrderVersion'
    /orderVersion/items:
        get:
            description: Finds multiple entities of OrderVersion type by its ids
            operationId: getOrderVersions
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderVersion'
    /orderVersion/ldeps:
        get:
            description: Returns all entities of OrderVersion type related to multiple entities of Order type
            operationId: getOwnedOrderVersionsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Order entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderVersion'
    /orderVersion/list:
        get:
            description: Returns all entities of OrderVersion type
            operationId: getAllOrderVersions
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/OrderVersion'
    /order/cancelorder:
        post:
            operationId: cancelOrder
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/CancelOrder'
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/CommandResult'
    /order/deps:
        get:
            description: Returns all entities of Order type related to Account type
            operationId: getOwnedOrders
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Account entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Order'
    /order/item:
        get:
            description: Finds an entity of Order type by its id
            operationId: getOrder
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Order'
    /order/items:
        get:
            description: Finds multiple entities of Order type by its ids
            operationId: getOrders
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Order'
    /order/ldeps:
        get:
            description: Returns all entities of Order type related to multiple entities of Account type
            operationId: getOwnedOrdersBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Account entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Order'
    /order/liquidateposition:
        post:
            operationId: liquidatePosition
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/LiquidatePosition'
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/PlaceOrderResult'
    /order/list:
        get:
            description: Returns all entities of Order type
            operationId: getAllOrders
            security:
                - bearer_access_token: []
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Order'
    /order/modifyorder:
        post:
            operationId: modifyOrder
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ModifyOrder'
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/CommandResult'
    /order/placeoco:
        post:
            operationId: placeOCO
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/PlaceOCO'
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/PlaceOcoResult'
    /order/placeorder:
        post:
            operationId: placeOrder
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/PlaceOrder'
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/PlaceOrderResult'
    /order/placeoso:
        post:
            operationId: placeOSO
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/PlaceOSO'
            tags:
                - Orders
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/PlaceOsoResult'
    /fillPair/deps:
        get:
            description: Returns all entities of FillPair type related to Position type
            operationId: getOwnedFillPairs
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Position entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/FillPair'
    /fillPair/item:
        get:
            description: Finds an entity of FillPair type by its id
            operationId: getFillPair
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/FillPair'
    /fillPair/items:
        get:
            description: Finds multiple entities of FillPair type by its ids
            operationId: getFillPairs
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/FillPair'
    /fillPair/ldeps:
        get:
            description: Returns all entities of FillPair type related to multiple entities of Position type
            operationId: getOwnedFillPairsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Position entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/FillPair'
    /fillPair/list:
        get:
            description: Returns all entities of FillPair type
            operationId: getAllFillPairs
            security:
                - bearer_access_token: []
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/FillPair'
    /positionLog/deps:
        get:
            description: Returns all entities of PositionLog type related to Account type
            operationId: getOwnedPositionLogs
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Account entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/PositionLog'
    /positionLog/item:
        get:
            description: Finds an entity of PositionLog type by its id
            operationId: getPositionLog
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/PositionLog'
    /positionLog/items:
        get:
            description: Finds multiple entities of PositionLog type by its ids
            operationId: getPositionLogs
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/PositionLog'
    /positionLog/ldeps:
        get:
            description: Returns all entities of PositionLog type related to multiple entities of Account type
            operationId: getOwnedPositionLogsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Account entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/PositionLog'
    /position/deps:
        get:
            description: Returns all entities of Position type related to Account type
            operationId: getOwnedPositions
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Account entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Position'
    /position/find:
        get:
            description: Finds an entity of Position type by its name
            operationId: findPosition
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Position'
    /position/item:
        get:
            description: Finds an entity of Position type by its id
            operationId: getPosition
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Position'
    /position/items:
        get:
            description: Finds multiple entities of Position type by its ids
            operationId: getPositions
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Position'
    /position/ldeps:
        get:
            description: Returns all entities of Position type related to multiple entities of Account type
            operationId: getOwnedPositionsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Account entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Position'
    /position/list:
        get:
            description: Returns all entities of Position type
            operationId: getAllPositions
            security:
                - bearer_access_token: []
            tags:
                - Positions
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Position'
    /contractMargin/deps:
        get:
            description: Returns all entities of ContractMargin type related to Contract type
            operationId: getOwnedContractMargins
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Contract entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContractMargin'
    /contractMargin/item:
        get:
            description: Finds an entity of ContractMargin type by its id
            operationId: getContractMargin
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ContractMargin'
    /contractMargin/items:
        get:
            description: Finds multiple entities of ContractMargin type by its ids
            operationId: getContractMargins
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContractMargin'
    /contractMargin/ldeps:
        get:
            description: Returns all entities of ContractMargin type related to multiple entities of Contract type
            operationId: getOwnedContractMarginsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Contract entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContractMargin'
    /productMargin/deps:
        get:
            description: Returns all entities of ProductMargin type related to Product type
            operationId: getOwnedProductMargins
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Product entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ProductMargin'
    /productMargin/item:
        get:
            description: Finds an entity of ProductMargin type by its id
            operationId: getProductMargin
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ProductMargin'
    /productMargin/items:
        get:
            description: Finds multiple entities of ProductMargin type by its ids
            operationId: getProductMargins
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ProductMargin'
    /productMargin/ldeps:
        get:
            description: Returns all entities of ProductMargin type related to multiple entities of Product type
            operationId: getOwnedProductMarginsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Product entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ProductMargin'
    /productMargin/list:
        get:
            description: Returns all entities of ProductMargin type
            operationId: getAllProductMargins
            security:
                - bearer_access_token: []
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ProductMargin'
    /userAccountAutoLiq/create:
        post:
            description: Creates a new entity of UserAccountAutoLiq
            operationId: createUserAccountAutoLiq
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserAccountAutoLiq'
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountAutoLiq'
    /userAccountAutoLiq/delete:
        post:
            description: Updates a existing entity of UserAccountAutoLiq
            operationId: deleteUserAccountAutoLiq
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserAccountAutoLiq'
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountAutoLiq'
    /userAccountAutoLiq/deps:
        get:
            description: Returns all entities of UserAccountAutoLiq type related to Account type
            operationId: getOwnedUserAccountAutoLiqs
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Account entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountAutoLiq'
    /userAccountAutoLiq/item:
        get:
            description: Finds an entity of UserAccountAutoLiq type by its id
            operationId: getUserAccountAutoLiq
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountAutoLiq'
    /userAccountAutoLiq/items:
        get:
            description: Finds multiple entities of UserAccountAutoLiq type by its ids
            operationId: getUserAccountAutoLiqs
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountAutoLiq'
    /userAccountAutoLiq/ldeps:
        get:
            description: Returns all entities of UserAccountAutoLiq type related to multiple entities of Account type
            operationId: getOwnedUserAccountAutoLiqsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Account entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountAutoLiq'
    /userAccountAutoLiq/list:
        get:
            description: Returns all entities of UserAccountAutoLiq type
            operationId: getAllUserAccountAutoLiqs
            security:
                - bearer_access_token: []
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountAutoLiq'
    /userAccountAutoLiq/update:
        post:
            description: Updates a existing entity of UserAccountAutoLiq
            operationId: updateUserAccountAutoLiq
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserAccountAutoLiq'
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountAutoLiq'
    /userAccountPositionLimit/create:
        post:
            description: Creates a new entity of UserAccountPositionLimit
            operationId: createUserAccountPositionLimit
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserAccountPositionLimit'
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountPositionLimit'
    /userAccountPositionLimit/delete:
        post:
            description: Updates a existing entity of UserAccountPositionLimit
            operationId: deleteUserAccountPositionLimit
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserAccountPositionLimit'
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountPositionLimit'
    /userAccountPositionLimit/deps:
        get:
            description: Returns all entities of UserAccountPositionLimit type related to Account type
            operationId: getOwnedUserAccountPositionLimits
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of Account entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountPositionLimit'
    /userAccountPositionLimit/item:
        get:
            description: Finds an entity of UserAccountPositionLimit type by its id
            operationId: getUserAccountPositionLimit
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountPositionLimit'
    /userAccountPositionLimit/items:
        get:
            description: Finds multiple entities of UserAccountPositionLimit type by its ids
            operationId: getUserAccountPositionLimits
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountPositionLimit'
    /userAccountPositionLimit/ldeps:
        get:
            description: Returns all entities of UserAccountPositionLimit type related to multiple entities of Account type
            operationId: getOwnedUserAccountPositionLimitsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of Account entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountPositionLimit'
    /userAccountPositionLimit/update:
        post:
            description: Updates a existing entity of UserAccountPositionLimit
            operationId: updateUserAccountPositionLimit
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserAccountPositionLimit'
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountPositionLimit'
    /userAccountRiskParameter/create:
        post:
            description: Creates a new entity of UserAccountRiskParameter
            operationId: createUserAccountRiskParameter
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserAccountRiskParameter'
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountRiskParameter'
    /userAccountRiskParameter/delete:
        post:
            description: Updates a existing entity of UserAccountRiskParameter
            operationId: deleteUserAccountRiskParameter
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserAccountRiskParameter'
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountRiskParameter'
    /userAccountRiskParameter/deps:
        get:
            description: Returns all entities of UserAccountRiskParameter type related to UserAccountPositionLimit type
            operationId: getOwnedUserAccountRiskParameters
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of UserAccountPositionLimit entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountRiskParameter'
    /userAccountRiskParameter/item:
        get:
            description: Finds an entity of UserAccountRiskParameter type by its id
            operationId: getUserAccountRiskParameter
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountRiskParameter'
    /userAccountRiskParameter/items:
        get:
            description: Finds multiple entities of UserAccountRiskParameter type by its ids
            operationId: getUserAccountRiskParameters
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountRiskParameter'
    /userAccountRiskParameter/ldeps:
        get:
            description: Returns all entities of UserAccountRiskParameter type related to multiple entities of UserAccountPositionLimit type
            operationId: getOwnedUserAccountRiskParametersBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of UserAccountPositionLimit entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserAccountRiskParameter'
    /userAccountRiskParameter/update:
        post:
            description: Updates a existing entity of UserAccountRiskParameter
            operationId: updateUserAccountRiskParameter
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserAccountRiskParameter'
            tags:
                - Risks
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserAccountRiskParameter'
    /contactInfo/deps:
        get:
            description: Returns all entities of ContactInfo type related to User type
            operationId: getOwnedContactInfos
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContactInfo'
    /contactInfo/item:
        get:
            description: Finds an entity of ContactInfo type by its id
            operationId: getContactInfo
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ContactInfo'
    /contactInfo/items:
        get:
            description: Finds multiple entities of ContactInfo type by its ids
            operationId: getContactInfos
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContactInfo'
    /contactInfo/ldeps:
        get:
            description: Returns all entities of ContactInfo type related to multiple entities of User type
            operationId: getOwnedContactInfosBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ContactInfo'
    /country/find:
        get:
            description: Finds an entity of Country type by its name
            operationId: findCountry
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Country'
    /country/item:
        get:
            description: Finds an entity of Country type by its id
            operationId: getCountry
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Country'
    /country/items:
        get:
            description: Finds multiple entities of Country type by its ids
            operationId: getCountries
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Country'
    /country/list:
        get:
            description: Returns all entities of Country type
            operationId: getAllCountries
            security:
                - bearer_access_token: []
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Country'
    /country/suggest:
        get:
            description: Returns entities of Country type filtered by occurence of a text in one of its fields
            operationId: suggestCountries
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Country'
    /marketDataSubscription/create:
        post:
            description: Creates a new entity of MarketDataSubscription
            operationId: createMarketDataSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/MarketDataSubscription'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarketDataSubscription'
    /marketDataSubscription/delete:
        post:
            description: Updates a existing entity of MarketDataSubscription
            operationId: deleteMarketDataSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/MarketDataSubscription'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarketDataSubscription'
    /marketDataSubscription/deps:
        get:
            description: Returns all entities of MarketDataSubscription type related to User type
            operationId: getOwnedMarketDataSubscriptions
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscription'
    /marketDataSubscription/item:
        get:
            description: Finds an entity of MarketDataSubscription type by its id
            operationId: getMarketDataSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarketDataSubscription'
    /marketDataSubscription/items:
        get:
            description: Finds multiple entities of MarketDataSubscription type by its ids
            operationId: getMarketDataSubscriptions
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscription'
    /marketDataSubscription/ldeps:
        get:
            description: Returns all entities of MarketDataSubscription type related to multiple entities of User type
            operationId: getOwnedMarketDataSubscriptionsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscription'
    /marketDataSubscription/list:
        get:
            description: Returns all entities of MarketDataSubscription type
            operationId: getAllMarketDataSubscriptions
            security:
                - bearer_access_token: []
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/MarketDataSubscription'
    /marketDataSubscription/update:
        post:
            description: Updates a existing entity of MarketDataSubscription
            operationId: updateMarketDataSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/MarketDataSubscription'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarketDataSubscription'
    /organization/find:
        get:
            description: Finds an entity of Organization type by its name
            operationId: findOrganization
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Organization'
    /organization/item:
        get:
            description: Finds an entity of Organization type by its id
            operationId: getOrganization
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/Organization'
    /organization/items:
        get:
            description: Finds multiple entities of Organization type by its ids
            operationId: getOrganizations
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Organization'
    /organization/list:
        get:
            description: Returns all entities of Organization type
            operationId: getAllOrganizations
            security:
                - bearer_access_token: []
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Organization'
    /organization/suggest:
        get:
            description: Returns entities of Organization type filtered by occurence of a text in one of its fields
            operationId: suggestOrganizations
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Organization'
    /tradovateSubscription/create:
        post:
            description: Creates a new entity of TradovateSubscription
            operationId: createTradovateSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TradovateSubscription'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradovateSubscription'
    /tradovateSubscription/delete:
        post:
            description: Updates a existing entity of TradovateSubscription
            operationId: deleteTradovateSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TradovateSubscription'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradovateSubscription'
    /tradovateSubscription/deps:
        get:
            description: Returns all entities of TradovateSubscription type related to User type
            operationId: getOwnedTradovateSubscriptions
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradovateSubscription'
    /tradovateSubscription/item:
        get:
            description: Finds an entity of TradovateSubscription type by its id
            operationId: getTradovateSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradovateSubscription'
    /tradovateSubscription/items:
        get:
            description: Finds multiple entities of TradovateSubscription type by its ids
            operationId: getTradovateSubscriptions
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradovateSubscription'
    /tradovateSubscription/ldeps:
        get:
            description: Returns all entities of TradovateSubscription type related to multiple entities of User type
            operationId: getOwnedTradovateSubscriptionsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradovateSubscription'
    /tradovateSubscription/list:
        get:
            description: Returns all entities of TradovateSubscription type
            operationId: getAllTradovateSubscriptions
            security:
                - bearer_access_token: []
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TradovateSubscription'
    /tradovateSubscription/update:
        post:
            description: Updates a existing entity of TradovateSubscription
            operationId: updateTradovateSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TradovateSubscription'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradovateSubscription'
    /userPlugin/create:
        post:
            description: Creates a new entity of UserPlugin
            operationId: createUserPlugin
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserPlugin'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserPlugin'
    /userPlugin/delete:
        post:
            description: Updates a existing entity of UserPlugin
            operationId: deleteUserPlugin
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserPlugin'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserPlugin'
    /userPlugin/deps:
        get:
            description: Returns all entities of UserPlugin type related to User type
            operationId: getOwnedUserPlugins
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserPlugin'
    /userPlugin/item:
        get:
            description: Finds an entity of UserPlugin type by its id
            operationId: getUserPlugin
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserPlugin'
    /userPlugin/items:
        get:
            description: Finds multiple entities of UserPlugin type by its ids
            operationId: getUserPlugins
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserPlugin'
    /userPlugin/ldeps:
        get:
            description: Returns all entities of UserPlugin type related to multiple entities of User type
            operationId: getOwnedUserPluginsBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserPlugin'
    /userPlugin/list:
        get:
            description: Returns all entities of UserPlugin type
            operationId: getAllUserPlugins
            security:
                - bearer_access_token: []
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserPlugin'
    /userPlugin/update:
        post:
            description: Updates a existing entity of UserPlugin
            operationId: updateUserPlugin
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserPlugin'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserPlugin'
    /userProperty/deps:
        get:
            description: Returns all entities of UserProperty type related to User type
            operationId: getOwnedUserProperties
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserProperty'
    /userProperty/item:
        get:
            description: Finds an entity of UserProperty type by its id
            operationId: getUserProperty
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserProperty'
    /userProperty/items:
        get:
            description: Finds multiple entities of UserProperty type by its ids
            operationId: getUserProperties
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserProperty'
    /userProperty/ldeps:
        get:
            description: Returns all entities of UserProperty type related to multiple entities of User type
            operationId: getOwnedUserPropertiesBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserProperty'
    /userReadStatus/deps:
        get:
            description: Returns all entities of UserReadStatus type related to User type
            operationId: getOwnedUserReadStatuses
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserReadStatus'
    /userReadStatus/item:
        get:
            description: Finds an entity of UserReadStatus type by its id
            operationId: getUserReadStatus
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserReadStatus'
    /userReadStatus/items:
        get:
            description: Finds multiple entities of UserReadStatus type by its ids
            operationId: getUserReadStatuses
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserReadStatus'
    /userReadStatus/ldeps:
        get:
            description: Returns all entities of UserReadStatus type related to multiple entities of User type
            operationId: getOwnedUserReadStatusesBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserReadStatus'
    /userReadStatus/list:
        get:
            description: Returns all entities of UserReadStatus type
            operationId: getAllUserReadStatuses
            security:
                - bearer_access_token: []
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserReadStatus'
    /userReadStatus/setlastnewsreadstatus:
        post:
            operationId: setLastNewsReadStatus
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/SetLastNewsReadStatus'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserReadStatusResponse'
    /userSessionStats/deps:
        get:
            description: Returns all entities of UserSessionStats type related to User type
            operationId: getOwnedUserSessionStatses
            security:
                - bearer_access_token: []
            parameters:
                - name: masterid
                  description: id of User entity
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserSessionStats'
    /userSessionStats/item:
        get:
            description: Finds an entity of UserSessionStats type by its id
            operationId: getUserSessionStats
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserSessionStats'
    /userSessionStats/items:
        get:
            description: Finds multiple entities of UserSessionStats type by its ids
            operationId: getUserSessionStatses
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserSessionStats'
    /userSessionStats/ldeps:
        get:
            description: Returns all entities of UserSessionStats type related to multiple entities of User type
            operationId: getOwnedUserSessionStatsesBatch
            security:
                - bearer_access_token: []
            parameters:
                - name: masterids
                  description: ids of User entity
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserSessionStats'
    /userSessionStats/list:
        get:
            description: Returns all entities of UserSessionStats type
            operationId: getAllUserSessionStatses
            security:
                - bearer_access_token: []
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserSessionStats'
    /userSession/item:
        get:
            description: Finds an entity of UserSession type by its id
            operationId: getUserSession
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserSession'
    /userSession/items:
        get:
            description: Finds multiple entities of UserSession type by its ids
            operationId: getUserSessions
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/UserSession'
    /user/accepttradingpermission:
        post:
            operationId: acceptTradingPermission
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AcceptTradingPermission'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradingPermissionResponse'
    /user/addmarketdatasubscription:
        post:
            operationId: addMarketDataSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AddMarketDataSubscription'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/MarketDataSubscriptionResponse'
    /user/addtradovatesubscription:
        post:
            operationId: addTradovateSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AddTradovateSubscription'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradovateSubscriptionResponse'
    /user/canceltradovatesubscription:
        post:
            operationId: cancelTradovateSubscription
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/CancelTradovateSubscription'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradovateSubscriptionResponse'
    /user/find:
        get:
            description: Finds an entity of User type by its name
            operationId: findUser
            security:
                - bearer_access_token: []
            parameters:
                - name: name
                  in: query
                  required: true
                  type: string
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/User'
    /user/getaccounttradingpermissions:
        post:
            operationId: getAccountTradingPermissions
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/GetAccountTradingPermissions'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradingPermissionsResponse'
    /user/getconnectedapplications:
        get:
            operationId: getConnectedApplications
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/GetConnectedApplications'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/ConnectedApplications'
    /user/item:
        get:
            description: Finds an entity of User type by its id
            operationId: getUser
            security:
                - bearer_access_token: []
            parameters:
                - name: id
                  in: query
                  required: true
                  type: integer
                  format: int32
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/User'
    /user/items:
        get:
            description: Finds multiple entities of User type by its ids
            operationId: getUsers
            security:
                - bearer_access_token: []
            parameters:
                - name: ids
                  in: query
                  required: true
                  type: array
                  items:
                    type: integer
                  collectionFormat: csv
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/User'
    /user/list:
        get:
            description: Returns all entities of User type
            operationId: getAllUsers
            security:
                - bearer_access_token: []
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/User'
    /user/modifycredentials:
        post:
            operationId: modifyCredentials
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ModifyCredentials'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AccessTokenResponse'
    /user/modifyemailaddress:
        post:
            operationId: modifyEmailAddress
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ModifyEmailAddress'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/UserStatusMessage'
    /user/modifypassword:
        post:
            operationId: modifyPassword
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ModifyPassword'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/AccessTokenResponse'
    /user/opendemoaccount:
        post:
            operationId: openDemoAccount
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/OpenDemoAccount'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/OpenDemoAccountResponse'
    /user/requesttradingpermission:
        post:
            operationId: requestTradingPermission
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/RequestTradingPermission'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradingPermissionResponse'
    /user/revoketradingpermission:
        post:
            operationId: revokeTradingPermission
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/RevokeTradingPermission'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/TradingPermissionResponse'
    /user/signuporganizationmember:
        post:
            operationId: signUpOrganizationMember
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/SignUpOrganizationMember'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/SignUpResponse'
    /user/suggest:
        get:
            description: Returns entities of User type filtered by occurence of a text in one of its fields
            operationId: suggestUsers
            security:
                - bearer_access_token: []
            parameters:
                - name: t
                  description: Text
                  in: query
                  required: true
                  type: string
                - name: l
                  description: Max number of entities
                  in: query
                  required: true
                  type: integer
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/User'
    /user/syncrequest:
        post:
            operationId: syncRequest
            security:
                - bearer_access_token: []
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/SyncRequest'
            tags:
                - Users
            responses:
                200: 
                    description: See definition
                    schema:
                        $ref: '#/definitions/SyncMessage'
definitions:
    TradeTime:
        type: object
        required:
            - hour
            - minute
        properties:
            hour:
                type: integer
            minute:
                type: integer
    TradeDate:
        type: object
        required:
            - year
            - month
            - day
        properties:
            year:
                type: integer
            month:
                type: integer
            day:
                type: integer
    AcceptTradingPermission:
        type: object
        required:
            - tradingPermissionId
        properties: 
            tradingPermissionId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of TradingPermission"
    AccessTokenRequest:
        type: object
        required:
            - name
            - password
        properties: 
            name:
                type: string
            password:
                type: string
            coapplicantCode:
                type: string
            appId:
                type: string
            appVersion:
                type: string
    AccessTokenResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            accessToken:
                type: string
            expirationTime:
                type: string
                format: date-time
            passwordExpirationTime:
                type: string
                format: date-time
            userStatus:
                type: string
                description: "Active, Closed, Initiated, TemporaryLocked, UnconfirmedEmail"
                enum:
                    - TemporaryLocked
                    - Active
                    - Initiated
                    - UnconfirmedEmail
                    - Closed
            userId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            name:
                type: string
            hasLive:
                type: boolean
    Account:
        type: object
        required:
            - name
            - userId
            - accountType
            - active
            - clearingHouseId
            - riskCategoryId
            - autoLiqProfileId
            - marginAccountType
            - legalStatus
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            accountType:
                type: string
                description: "Customer, Giveup, House, Omnibus, Wash"
                enum:
                    - Giveup
                    - Omnibus
                    - House
                    - Customer
                    - Wash
            active:
                type: boolean
            clearingHouseId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of ClearingHouse"
            riskCategoryId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of RiskCategory"
            autoLiqProfileId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of AutoLiqProfile"
            cftcNumber:
                type: string
            marginAccountType:
                type: string
                description: "Hedger, Speculator"
                enum:
                    - Speculator
                    - Hedger
            legalStatus:
                type: string
                description: "Corporation, GP, IRA, Individual, Joint, LLC, LLP, LP, Trust"
                enum:
                    - LLP
                    - Corporation
                    - Trust
                    - Individual
                    - LLC
                    - IRA
                    - LP
                    - Joint
                    - GP
            readonly:
                type: boolean
    AddMarketDataSubscription:
        type: object
        required:
            - marketDataSubscriptionPlanIds
            - year
            - month
        properties: 
            marketDataSubscriptionPlanIds:
                type: array
                items:
                    type: integer
            year:
                type: integer
                format: int32
            month:
                type: integer
                format: int32
            creditCardId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CreditCard"
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            userId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
    AddTradovateSubscription:
        type: object
        required:
            - tradovateSubscriptionPlanId
        properties: 
            tradovateSubscriptionPlanId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of TradovateSubscriptionPlan"
            creditCardId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CreditCard"
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            userId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
    AdminAlert:
        type: object
        required:
            - name
            - timestamp
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            timestamp:
                type: string
                format: date-time
    AdminAlertSignal:
        type: object
        required:
            - timestamp
            - adminAlertId
            - text
            - emailSent
            - subjectId
        properties: 
            id:
                type: integer
                format: int32
            timestamp:
                type: string
                format: date-time
            adminAlertId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of AdminAlert"
            relatedToAccountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            relatedToUserId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            ownedByAdminId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            completed:
                type: string
                format: date-time
            text:
                type: string
            emailSent:
                type: boolean
            subjectId:
                type: integer
                format: int32
    AdminAlertSignalResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            adminAlertSignal:
                $ref: '#/definitions/AdminAlertSignal'
    Alert:
        type: object
        required:
            - timestamp
            - userId
            - status
            - expression
        properties: 
            id:
                type: integer
                format: int32
            timestamp:
                type: string
                format: date-time
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            status:
                type: string
                description: "Active, Expired, Failed, Inactive, TriggeredOut"
                enum:
                    - Active
                    - Inactive
                    - Failed
                    - Expired
                    - TriggeredOut
            expression:
                type: string
            validUntil:
                type: string
                format: date-time
            triggerLimits:
                type: integer
                format: int32
            triggeredCounter:
                type: integer
                format: int32
            failure:
                type: string
            message:
                type: string
    AlertResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            alert:
                $ref: '#/definitions/Alert'
    AlertSignal:
        type: object
        required:
            - timestamp
            - alertId
            - isRead
            - text
        properties: 
            id:
                type: integer
                format: int32
            timestamp:
                type: string
                format: date-time
            alertId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Alert"
            isRead:
                type: boolean
            text:
                type: string
    CancelOrder:
        type: object
        required:
            - orderId
        properties: 
            orderId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Order"
            clOrdId:
                type: string
            activationTime:
                type: string
                format: date-time
    CancelTradovateSubscription:
        type: object
        required:
            - tradovateSubscriptionId
        properties: 
            tradovateSubscriptionId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of TradovateSubscription"
            cancelReason:
                type: string
    CashBalance:
        type: object
        required:
            - accountId
            - timestamp
            - tradeDate
            - currencyId
            - amount
        properties: 
            id:
                type: integer
                format: int32
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            timestamp:
                type: string
                format: date-time
            tradeDate:
                $ref: '#/definitions/TradeDate'
            currencyId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Currency"
            amount:
                type: number
                format: double
            realizedPnL:
                type: number
                format: double
            weekRealizedPnL:
                type: number
                format: double
    CashBalanceLog:
        type: object
        required:
            - accountId
            - timestamp
            - tradeDate
            - currencyId
            - amount
            - cashChangeType
            - delta
        properties: 
            id:
                type: integer
                format: int32
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            timestamp:
                type: string
                format: date-time
            tradeDate:
                $ref: '#/definitions/TradeDate'
            currencyId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Currency"
            amount:
                type: number
                format: double
            realizedPnL:
                type: number
                format: double
            weekRealizedPnL:
                type: number
                format: double
            cashChangeType:
                type: string
                description: "AutomaticReconciliation, BrokerageFee, CancelledPairedTrade, ClearingFee, Commission, DeskFee, EntitlementSubscription, ExchangeFee, FundTransaction, FundTransactionFee, IPFee, LiquidationFee, ManualAdjustment, MarketDataSubscription, NewSession, NfaFee, OptionsTrade, OrderRoutingFee, TradePaired, TradovateSubscription"
                enum:
                    - ClearingFee
                    - TradovateSubscription
                    - FundTransactionFee
                    - MarketDataSubscription
                    - LiquidationFee
                    - OptionsTrade
                    - BrokerageFee
                    - TradePaired
                    - DeskFee
                    - EntitlementSubscription
                    - NewSession
                    - ManualAdjustment
                    - FundTransaction
                    - NfaFee
                    - AutomaticReconciliation
                    - ExchangeFee
                    - OrderRoutingFee
                    - Commission
                    - IPFee
                    - CancelledPairedTrade
            fillPairId:
                type: integer
                format: int32
                minimum: 0
                description: "id of FillPair"
            fillId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Fill"
            fundTransactionId:
                type: integer
                format: int32
                minimum: 0
                description: "id of FundTransaction"
            comment:
                type: string
            delta:
                type: number
                format: double
    CashBalanceSnapshot:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            totalCashValue:
                type: number
                format: double
            totalPnL:
                type: number
                format: double
            initialMargin:
                type: number
                format: double
            maintenanceMargin:
                type: number
                format: double
            netLiq:
                type: number
                format: double
    Chat:
        type: object
        required:
            - userId
            - timestamp
            - category
        properties: 
            id:
                type: integer
                format: int32
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            timestamp:
                type: string
                format: date-time
            category:
                type: string
                description: "Support, TradeDesk"
                enum:
                    - Support
                    - TradeDesk
            assignedSupportId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            closedById:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            closeTimestamp:
                type: string
                format: date-time
    ChatMessage:
        type: object
        required:
            - timestamp
            - chatId
            - senderId
            - text
            - readStatus
        properties: 
            id:
                type: integer
                format: int32
            timestamp:
                type: string
                format: date-time
            chatId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Chat"
            senderId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            senderName:
                type: string
            text:
                type: string
            readStatus:
                type: boolean
    ChatMessageResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            chatMessage:
                $ref: '#/definitions/ChatMessage'
    ChatResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            chat:
                $ref: '#/definitions/Chat'
    ClearingHouse:
        type: object
        required:
            - name
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
    CloseChat:
        type: object
        required:
            - chatId
        properties: 
            chatId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Chat"
    Command:
        type: object
        required:
            - orderId
            - timestamp
            - commandType
            - commandStatus
        properties: 
            id:
                type: integer
                format: int32
            orderId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Order"
            timestamp:
                type: string
                format: date-time
            clOrdId:
                type: string
            commandType:
                type: string
                description: "Cancel, Modify, New"
                enum:
                    - New
                    - Modify
                    - Cancel
            commandStatus:
                type: string
                description: "AtExecution, ExecutionRejected, ExecutionStopped, ExecutionSuspended, OnHold, Pending, PendingExecution, Replaced, RiskPassed, RiskRejected"
                enum:
                    - Replaced
                    - ExecutionStopped
                    - ExecutionSuspended
                    - RiskRejected
                    - RiskPassed
                    - AtExecution
                    - ExecutionRejected
                    - PendingExecution
                    - OnHold
                    - Pending
            senderId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            userSessionId:
                type: integer
                format: int32
                minimum: 0
                description: "id of UserSession"
            activationTime:
                type: string
                format: date-time
    CommandReport:
        type: object
        required:
            - commandId
            - timestamp
            - commandStatus
        properties: 
            id:
                type: integer
                format: int32
            commandId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Command"
            timestamp:
                type: string
                format: date-time
            commandStatus:
                type: string
                description: "AtExecution, ExecutionRejected, ExecutionStopped, ExecutionSuspended, OnHold, Pending, PendingExecution, Replaced, RiskPassed, RiskRejected"
                enum:
                    - Replaced
                    - ExecutionStopped
                    - ExecutionSuspended
                    - RiskRejected
                    - RiskPassed
                    - AtExecution
                    - ExecutionRejected
                    - PendingExecution
                    - OnHold
                    - Pending
            rejectReason:
                type: string
                description: "AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending, BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable, InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration, MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured, MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired, NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout, SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify, Unauthorized, UnknownReason, Unsupported"
                enum:
                    - Unsupported
                    - InvalidPrice
                    - NoQuote
                    - MaxPosLimitMisconfigured
                    - TooLate
                    - AnotherCommandPending
                    - MultipleAccountPlanRequired
                    - ExecutionProviderNotConfigured
                    - AccountClosed
                    - BackMonthProhibited
                    - NotEnoughLiquidity
                    - UnknownReason
                    - SessionClosed
                    - OtherExecutionRelated
                    - LiquidationOnly
                    - MaxTotalPosLimitReached
                    - LiquidationOnlyBeforeExpiration
                    - Unauthorized
                    - AdvancedTrailingStopUnsupported
                    - RiskCheckTimeout
                    - ParentRejected
                    - MaxPosLimitReached
                    - MaxOrderQtyIsNotSpecified
                    - MaxOrderQtyLimitReached
                    - InvalidContract
                    - Success
                    - TradingLocked
                    - TrailingStopNonOrderQtyModify
                    - ExecutionProviderUnavailable
            text:
                type: string
            ordStatus:
                type: string
                description: "Canceled, Completed, Expired, Filled, PendingCancel, PendingNew, PendingReplace, Rejected, Suspended, Unknown, Working"
                enum:
                    - Suspended
                    - Filled
                    - PendingReplace
                    - Working
                    - Completed
                    - PendingCancel
                    - Expired
                    - Canceled
                    - Rejected
                    - Unknown
                    - PendingNew
    CommandResult:
        type: object
        properties: 
            failureReason:
                type: string
                description: "AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending, BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable, InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration, MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured, MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired, NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout, SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify, Unauthorized, UnknownReason, Unsupported"
                enum:
                    - Unsupported
                    - InvalidPrice
                    - NoQuote
                    - MaxPosLimitMisconfigured
                    - TooLate
                    - AnotherCommandPending
                    - MultipleAccountPlanRequired
                    - ExecutionProviderNotConfigured
                    - AccountClosed
                    - BackMonthProhibited
                    - NotEnoughLiquidity
                    - UnknownReason
                    - SessionClosed
                    - OtherExecutionRelated
                    - LiquidationOnly
                    - MaxTotalPosLimitReached
                    - LiquidationOnlyBeforeExpiration
                    - Unauthorized
                    - AdvancedTrailingStopUnsupported
                    - RiskCheckTimeout
                    - ParentRejected
                    - MaxPosLimitReached
                    - MaxOrderQtyIsNotSpecified
                    - MaxOrderQtyLimitReached
                    - InvalidContract
                    - Success
                    - TradingLocked
                    - TrailingStopNonOrderQtyModify
                    - ExecutionProviderUnavailable
            failureText:
                type: string
            commandId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Command"
    CompleteAlertSignal:
        type: object
        required:
            - adminAlertSignalId
        properties: 
            adminAlertSignalId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of AdminAlertSignal"
    ConnectedApplicationInfo:
        type: object
        required:
            - startTime
            - appId
            - userAgent
            - deviceId
            - ipAddress
        properties: 
            startTime:
                type: string
                format: date-time
            appId:
                type: string
            userAgent:
                type: string
            deviceId:
                type: string
            ipAddress:
                type: string
    ConnectedApplications:
        type: object
        required:
            - connectedApplications
        properties: 
            connectedApplications:
                type: array
                items:
                    $ref: '#/definitions/ConnectedApplicationInfo'
    ContactInfo:
        type: object
        required:
            - userId
            - firstName
            - lastName
            - streetAddress1
            - city
            - country
            - phone
        properties: 
            id:
                type: integer
                format: int32
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            firstName:
                type: string
            lastName:
                type: string
            streetAddress1:
                type: string
            streetAddress2:
                type: string
            city:
                type: string
            state:
                type: string
            postCode:
                type: string
            country:
                type: string
            phone:
                type: string
            mailingIsDifferent:
                type: boolean
            mailingStreetAddress1:
                type: string
            mailingStreetAddress2:
                type: string
            mailingCity:
                type: string
            mailingState:
                type: string
            mailingPostCode:
                type: string
            mailingCountry:
                type: string
    Contract:
        type: object
        required:
            - name
            - contractMaturityId
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            contractMaturityId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of ContractMaturity"
    ContractGroup:
        type: object
        required:
            - name
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
    ContractMargin:
        type: object
        required:
            - initialMargin
            - maintenanceMargin
            - timestamp
        properties: 
            id:
                type: integer
                format: int32
            initialMargin:
                type: number
                format: double
            maintenanceMargin:
                type: number
                format: double
            timestamp:
                type: string
                format: date-time
    ContractMaturity:
        type: object
        required:
            - productId
            - expirationMonth
            - expirationDate
            - isFront
        properties: 
            id:
                type: integer
                format: int32
            productId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Product"
            expirationMonth:
                type: integer
                format: int32
            expirationDate:
                type: string
                format: date-time
            firstIntentDate:
                type: string
                format: date-time
            underlyingId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Contract"
            isFront:
                type: boolean
    Country:
        type: object
        required:
            - name
            - code
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            code:
                type: string
    CreateAlert:
        type: object
        required:
            - expression
        properties: 
            expression:
                type: string
            validUntil:
                type: string
                format: date-time
            triggerLimits:
                type: integer
                format: int32
            message:
                type: string
    Currency:
        type: object
        required:
            - name
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            symbol:
                type: string
    CurrencyRate:
        type: object
        required:
            - timestamp
            - rate
        properties: 
            id:
                type: integer
                format: int32
            timestamp:
                type: string
                format: date-time
            rate:
                type: number
                format: double
    DeleteAlert:
        type: object
        required:
            - alertId
        properties: 
            alertId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Alert"
    DismissAlert:
        type: object
        required:
            - alertId
        properties: 
            alertId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Alert"
    Exchange:
        type: object
        required:
            - name
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
    ExecutionReport:
        type: object
        required:
            - commandId
            - name
            - accountId
            - contractId
            - timestamp
            - orderId
            - execType
            - action
        properties: 
            id:
                type: integer
                format: int32
            commandId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Command"
            name:
                type: string
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            contractId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Contract"
            timestamp:
                type: string
                format: date-time
            tradeDate:
                $ref: '#/definitions/TradeDate'
            orderId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Order"
            execType:
                type: string
                description: "Canceled, Completed, DoneForDay, Expired, New, OrderStatus, PendingCancel, PendingNew, PendingReplace, Rejected, Replaced, Stopped, Suspended, Trade, TradeCancel, TradeCorrect"
                enum:
                    - Suspended
                    - Stopped
                    - Replaced
                    - PendingReplace
                    - OrderStatus
                    - TradeCancel
                    - Completed
                    - Trade
                    - PendingCancel
                    - Expired
                    - TradeCorrect
                    - New
                    - Canceled
                    - DoneForDay
                    - Rejected
                    - PendingNew
            execRefId:
                type: string
            ordStatus:
                type: string
                description: "Canceled, Completed, Expired, Filled, PendingCancel, PendingNew, PendingReplace, Rejected, Suspended, Unknown, Working"
                enum:
                    - Suspended
                    - Filled
                    - PendingReplace
                    - Working
                    - Completed
                    - PendingCancel
                    - Expired
                    - Canceled
                    - Rejected
                    - Unknown
                    - PendingNew
            action:
                type: string
                description: "Buy, Sell"
                enum:
                    - Buy
                    - Sell
            cumQty:
                type: integer
                format: int32
            avgPx:
                type: number
                format: double
            lastQty:
                type: integer
                format: int32
            lastPx:
                type: number
                format: double
            rejectReason:
                type: string
                description: "AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending, BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable, InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration, MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured, MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired, NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout, SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify, Unauthorized, UnknownReason, Unsupported"
                enum:
                    - Unsupported
                    - InvalidPrice
                    - NoQuote
                    - MaxPosLimitMisconfigured
                    - TooLate
                    - AnotherCommandPending
                    - MultipleAccountPlanRequired
                    - ExecutionProviderNotConfigured
                    - AccountClosed
                    - BackMonthProhibited
                    - NotEnoughLiquidity
                    - UnknownReason
                    - SessionClosed
                    - OtherExecutionRelated
                    - LiquidationOnly
                    - MaxTotalPosLimitReached
                    - LiquidationOnlyBeforeExpiration
                    - Unauthorized
                    - AdvancedTrailingStopUnsupported
                    - RiskCheckTimeout
                    - ParentRejected
                    - MaxPosLimitReached
                    - MaxOrderQtyIsNotSpecified
                    - MaxOrderQtyLimitReached
                    - InvalidContract
                    - Success
                    - TradingLocked
                    - TrailingStopNonOrderQtyModify
                    - ExecutionProviderUnavailable
            text:
                type: string
            exchangeOrderId:
                type: string
    Fill:
        type: object
        required:
            - orderId
            - contractId
            - timestamp
            - tradeDate
            - action
            - qty
            - price
            - active
            - finallyPaired
        properties: 
            id:
                type: integer
                format: int32
            orderId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Order"
            contractId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Contract"
            timestamp:
                type: string
                format: date-time
            tradeDate:
                $ref: '#/definitions/TradeDate'
            action:
                type: string
                description: "Buy, Sell"
                enum:
                    - Buy
                    - Sell
            qty:
                type: integer
                format: int32
            price:
                type: number
                format: double
            active:
                type: boolean
            finallyPaired:
                type: integer
                format: int32
    FillFee:
        type: object
        properties: 
            id:
                type: integer
                format: int32
            clearingFee:
                type: number
                format: double
            clearingCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            exchangeFee:
                type: number
                format: double
            exchangeCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            nfaFee:
                type: number
                format: double
            nfaCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            brokerageFee:
                type: number
                format: double
            brokerageCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            ipFee:
                type: number
                format: double
            ipCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            commission:
                type: number
                format: double
            commissionCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            orderRoutingFee:
                type: number
                format: double
            orderRoutingCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
    FillPair:
        type: object
        required:
            - positionId
            - buyFillId
            - sellFillId
            - qty
            - buyPrice
            - sellPrice
            - active
        properties: 
            id:
                type: integer
                format: int32
            positionId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Position"
            buyFillId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Fill"
            sellFillId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Fill"
            qty:
                type: integer
                format: int32
            buyPrice:
                type: number
                format: double
            sellPrice:
                type: number
                format: double
            active:
                type: boolean
    GetAccountTradingPermissions:
        type: object
        required:
            - accountId
        properties: 
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
    GetCashBalanceSnapshot:
        type: object
        required:
            - accountId
        properties: 
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
    GetConnectedApplications:
        type: object
    GetProductFeeParams:
        type: object
        required:
            - productIds
        properties: 
            productIds:
                type: array
                items:
                    type: integer
    InterruptOrderStrategy:
        type: object
        required:
            - orderStrategyId
        properties: 
            orderStrategyId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of OrderStrategy"
    LiquidatePosition:
        type: object
        required:
            - accountId
            - contractId
            - admin
        properties: 
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            contractId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Contract"
            admin:
                type: boolean
    MarginSnapshot:
        type: object
        required:
            - timestamp
            - riskTimePeriodId
            - initialMargin
            - maintenanceMargin
            - totalUsedMargin
            - fullInitialMargin
        properties: 
            id:
                type: integer
                format: int32
            timestamp:
                type: string
                format: date-time
            riskTimePeriodId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of RiskTimePeriod"
            initialMargin:
                type: number
                format: double
            maintenanceMargin:
                type: number
                format: double
            autoLiqLevel:
                type: number
                format: double
            liqOnlyLevel:
                type: number
                format: double
            totalUsedMargin:
                type: number
                format: double
            fullInitialMargin:
                type: number
                format: double
    MarkAsReadChatMessage:
        type: object
        required:
            - chatMessageId
        properties: 
            chatMessageId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of ChatMessage"
    MarkReadAlertSignal:
        type: object
        required:
            - alertId
            - alertSignalId
        properties: 
            alertId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Alert"
            alertSignalId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of AlertSignal"
    MarketDataSubscription:
        type: object
        required:
            - userId
            - timestamp
            - planPrice
            - marketDataSubscriptionPlanId
            - year
            - month
        properties: 
            id:
                type: integer
                format: int32
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            timestamp:
                type: string
                format: date-time
            planPrice:
                type: number
                format: double
            creditCardTransactionId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CreditCardTransaction"
            cashBalanceLogId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CashBalanceLog"
            creditCardId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CreditCard"
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            marketDataSubscriptionPlanId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of MarketDataSubscriptionPlan"
            year:
                type: integer
                format: int32
            month:
                type: integer
                format: int32
            renewalCreditCardId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CreditCard"
            renewalAccountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
    MarketDataSubscriptionExchangeScope:
        type: object
        required:
            - name
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            bundleOf:
                type: string
    MarketDataSubscriptionPlan:
        type: object
        required:
            - name
            - title
            - price
            - exchangeScopeId
            - dataType
            - professional
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            title:
                type: string
            price:
                type: number
                format: double
            startDate:
                $ref: '#/definitions/TradeDate'
            discontinuedDate:
                $ref: '#/definitions/TradeDate'
            exchangeScopeId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of MarketDataSubscriptionExchangeScope"
            dataType:
                type: string
                description: "DOM, Top"
                enum:
                    - Top
                    - DOM
            professional:
                type: string
                description: "Either, NonProfessional, Professional"
                enum:
                    - NonProfessional
                    - Professional
                    - Either
    MarketDataSubscriptionResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            errorCode:
                type: string
                description: "ConflictWithExisting, DowngradeNotAllowed, IncompatibleCMEMarketDataSubscriptionPlans, IncorrectPaymentMethod, InsufficientFunds, PaymentProviderError, PlanDiscontinued, SingleTrialOnly, Success, UnknownError"
                enum:
                    - IncorrectPaymentMethod
                    - UnknownError
                    - IncompatibleCMEMarketDataSubscriptionPlans
                    - InsufficientFunds
                    - ConflictWithExisting
                    - PaymentProviderError
                    - PlanDiscontinued
                    - DowngradeNotAllowed
                    - SingleTrialOnly
                    - Success
            marketDataSubscription:
                $ref: '#/definitions/MarketDataSubscription'
    ModifyAlert:
        type: object
        required:
            - alertId
            - expression
        properties: 
            alertId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Alert"
            expression:
                type: string
            validUntil:
                type: string
                format: date-time
            triggerLimits:
                type: integer
                format: int32
            message:
                type: string
    ModifyCredentials:
        type: object
        required:
            - name
            - password
            - currentPassword
        properties: 
            userId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            name:
                type: string
            password:
                type: string
            currentPassword:
                type: string
    ModifyEmailAddress:
        type: object
        required:
            - email
        properties: 
            userId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            email:
                type: string
    ModifyOrder:
        type: object
        required:
            - orderId
            - orderQty
            - orderType
        properties: 
            orderId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Order"
            clOrdId:
                type: string
            orderQty:
                type: integer
                format: int32
            orderType:
                type: string
                description: "Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit"
                enum:
                    - Limit
                    - Market
                    - TrailingStopLimit
                    - StopLimit
                    - TrailingStop
                    - MIT
                    - QTS
                    - Stop
            price:
                type: number
                format: double
            stopPrice:
                type: number
                format: double
            maxShow:
                type: integer
                format: int32
            pegDifference:
                type: number
                format: double
            timeInForce:
                type: string
                description: "Day, FOK, GTC, GTD, IOC"
                enum:
                    - GTD
                    - FOK
                    - GTC
                    - Day
                    - IOC
            expireTime:
                type: string
                format: date-time
            text:
                type: string
            activationTime:
                type: string
                format: date-time
    ModifyOrderStrategy:
        type: object
        required:
            - orderStrategyId
            - command
        properties: 
            orderStrategyId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of OrderStrategy"
            command:
                type: string
    ModifyPassword:
        type: object
        required:
            - password
            - currentPassword
        properties: 
            userId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            password:
                type: string
            currentPassword:
                type: string
    NewsStory:
        type: object
        required:
            - timestamp
            - name
            - author
            - created
            - updated
            - title
        properties: 
            id:
                type: integer
                format: int32
            timestamp:
                type: string
                format: date-time
            name:
                type: string
            author:
                type: string
            created:
                type: string
                format: date-time
            updated:
                type: string
                format: date-time
            title:
                type: string
            teaser:
                type: string
            body:
                type: string
            url:
                type: string
            source:
                type: string
            images:
                type: string
            channels:
                type: string
            stocks:
                type: string
            tags:
                type: string
    OpenDemoAccount:
        type: object
        properties: 
            templateAccountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            name:
                type: string
            initialBalance:
                type: number
                format: double
    OpenDemoAccountResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
    Order:
        type: object
        required:
            - accountId
            - timestamp
            - action
            - ordStatus
            - admin
        properties: 
            id:
                type: integer
                format: int32
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            contractId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Contract"
            spreadDefinitionId:
                type: integer
                format: int32
                minimum: 0
                description: "id of SpreadDefinition"
            timestamp:
                type: string
                format: date-time
                description: "Create Time"
            action:
                type: string
                description: "Buy, Sell"
                enum:
                    - Buy
                    - Sell
            ordStatus:
                type: string
                description: "Canceled, Completed, Expired, Filled, PendingCancel, PendingNew, PendingReplace, Rejected, Suspended, Unknown, Working"
                enum:
                    - Suspended
                    - Filled
                    - PendingReplace
                    - Working
                    - Completed
                    - PendingCancel
                    - Expired
                    - Canceled
                    - Rejected
                    - Unknown
                    - PendingNew
            executionProviderId:
                type: integer
                format: int32
                minimum: 0
                description: "id of ExecutionProvider"
            ocoId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Order"
            parentId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Order"
            linkedId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Order"
            admin:
                type: boolean
    OrderStrategy:
        type: object
        required:
            - accountId
            - timestamp
            - contractId
            - orderStrategyTypeId
            - action
            - status
        properties: 
            id:
                type: integer
                format: int32
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            timestamp:
                type: string
                format: date-time
            contractId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Contract"
            orderStrategyTypeId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of OrderStrategyType"
            initiatorId:
                type: integer
                format: int32
                minimum: 0
                description: "id of OrderStrategy"
            action:
                type: string
                description: "Buy, Sell"
                enum:
                    - Buy
                    - Sell
            params:
                type: string
            uuid:
                type: string
            status:
                type: string
                description: "ActiveStrategy, ExecutionFailed, ExecutionFinished, ExecutionInterrupted, InactiveStrategy, NotEnoughLiquidity, StoppedByUser"
                enum:
                    - ExecutionInterrupted
                    - ExecutionFinished
                    - NotEnoughLiquidity
                    - ExecutionFailed
                    - InactiveStrategy
                    - StoppedByUser
                    - ActiveStrategy
            failureMessage:
                type: string
            senderId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
    OrderStrategyLink:
        type: object
        required:
            - orderStrategyId
            - orderId
            - label
        properties: 
            id:
                type: integer
                format: int32
            orderStrategyId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of OrderStrategy"
            orderId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Order"
            label:
                type: string
    OrderStrategyLog:
        type: object
        required:
            - timestamp
            - orderStrategyId
            - status
            - text
        properties: 
            id:
                type: integer
                format: int32
            timestamp:
                type: string
                format: date-time
            orderStrategyId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of OrderStrategy"
            status:
                type: string
                description: "ActiveStrategy, ExecutionFailed, ExecutionFinished, ExecutionInterrupted, InactiveStrategy, NotEnoughLiquidity, StoppedByUser"
                enum:
                    - ExecutionInterrupted
                    - ExecutionFinished
                    - NotEnoughLiquidity
                    - ExecutionFailed
                    - InactiveStrategy
                    - StoppedByUser
                    - ActiveStrategy
            text:
                type: string
    OrderStrategyStatusResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            orderStrategy:
                $ref: '#/definitions/OrderStrategy'
    OrderStrategyType:
        type: object
        required:
            - name
            - enabled
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            enabled:
                type: boolean
    OrderVersion:
        type: object
        required:
            - orderId
            - orderQty
            - orderType
        properties: 
            id:
                type: integer
                format: int32
            orderId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Order"
            orderQty:
                type: integer
                format: int32
            orderType:
                type: string
                description: "Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit"
                enum:
                    - Limit
                    - Market
                    - TrailingStopLimit
                    - StopLimit
                    - TrailingStop
                    - MIT
                    - QTS
                    - Stop
            price:
                type: number
                format: double
            stopPrice:
                type: number
                format: double
            maxShow:
                type: integer
                format: int32
            pegDifference:
                type: number
                format: double
            timeInForce:
                type: string
                description: "Day, FOK, GTC, GTD, IOC"
                enum:
                    - GTD
                    - FOK
                    - GTC
                    - Day
                    - IOC
            expireTime:
                type: string
                format: date-time
            text:
                type: string
    Organization:
        type: object
        required:
            - name
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
    PlaceOCO:
        type: object
        required:
            - action
            - symbol
            - orderQty
            - orderType
            - other
        properties: 
            accountSpec:
                type: string
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            clOrdId:
                type: string
            action:
                type: string
                description: "Buy, Sell"
                enum:
                    - Buy
                    - Sell
            symbol:
                type: string
            orderQty:
                type: integer
                format: int32
            orderType:
                type: string
                description: "Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit"
                enum:
                    - Limit
                    - Market
                    - TrailingStopLimit
                    - StopLimit
                    - TrailingStop
                    - MIT
                    - QTS
                    - Stop
            price:
                type: number
                format: double
            stopPrice:
                type: number
                format: double
            maxShow:
                type: integer
                format: int32
            pegDifference:
                type: number
                format: double
            timeInForce:
                type: string
                description: "Day, FOK, GTC, GTD, IOC"
                enum:
                    - GTD
                    - FOK
                    - GTC
                    - Day
                    - IOC
            expireTime:
                type: string
                format: date-time
            text:
                type: string
            activationTime:
                type: string
                format: date-time
            other:
                $ref: '#/definitions/RestrainedOrderVersion'
    PlaceOSO:
        type: object
        required:
            - action
            - symbol
            - orderQty
            - orderType
            - bracket1
        properties: 
            accountSpec:
                type: string
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            clOrdId:
                type: string
            action:
                type: string
                description: "Buy, Sell"
                enum:
                    - Buy
                    - Sell
            symbol:
                type: string
            orderQty:
                type: integer
                format: int32
            orderType:
                type: string
                description: "Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit"
                enum:
                    - Limit
                    - Market
                    - TrailingStopLimit
                    - StopLimit
                    - TrailingStop
                    - MIT
                    - QTS
                    - Stop
            price:
                type: number
                format: double
            stopPrice:
                type: number
                format: double
            maxShow:
                type: integer
                format: int32
            pegDifference:
                type: number
                format: double
            timeInForce:
                type: string
                description: "Day, FOK, GTC, GTD, IOC"
                enum:
                    - GTD
                    - FOK
                    - GTC
                    - Day
                    - IOC
            expireTime:
                type: string
                format: date-time
            text:
                type: string
            activationTime:
                type: string
                format: date-time
            bracket1:
                $ref: '#/definitions/RestrainedOrderVersion'
            bracket2:
                $ref: '#/definitions/RestrainedOrderVersion'
    PlaceOcoResult:
        type: object
        properties: 
            failureReason:
                type: string
                description: "AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending, BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable, InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration, MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured, MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired, NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout, SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify, Unauthorized, UnknownReason, Unsupported"
                enum:
                    - Unsupported
                    - InvalidPrice
                    - NoQuote
                    - MaxPosLimitMisconfigured
                    - TooLate
                    - AnotherCommandPending
                    - MultipleAccountPlanRequired
                    - ExecutionProviderNotConfigured
                    - AccountClosed
                    - BackMonthProhibited
                    - NotEnoughLiquidity
                    - UnknownReason
                    - SessionClosed
                    - OtherExecutionRelated
                    - LiquidationOnly
                    - MaxTotalPosLimitReached
                    - LiquidationOnlyBeforeExpiration
                    - Unauthorized
                    - AdvancedTrailingStopUnsupported
                    - RiskCheckTimeout
                    - ParentRejected
                    - MaxPosLimitReached
                    - MaxOrderQtyIsNotSpecified
                    - MaxOrderQtyLimitReached
                    - InvalidContract
                    - Success
                    - TradingLocked
                    - TrailingStopNonOrderQtyModify
                    - ExecutionProviderUnavailable
            failureText:
                type: string
            orderId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Order"
            ocoId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Order"
    PlaceOrder:
        type: object
        required:
            - action
            - symbol
            - orderQty
            - orderType
        properties: 
            accountSpec:
                type: string
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            clOrdId:
                type: string
            action:
                type: string
                description: "Buy, Sell"
                enum:
                    - Buy
                    - Sell
            symbol:
                type: string
            orderQty:
                type: integer
                format: int32
            orderType:
                type: string
                description: "Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit"
                enum:
                    - Limit
                    - Market
                    - TrailingStopLimit
                    - StopLimit
                    - TrailingStop
                    - MIT
                    - QTS
                    - Stop
            price:
                type: number
                format: double
            stopPrice:
                type: number
                format: double
            maxShow:
                type: integer
                format: int32
            pegDifference:
                type: number
                format: double
            timeInForce:
                type: string
                description: "Day, FOK, GTC, GTD, IOC"
                enum:
                    - GTD
                    - FOK
                    - GTC
                    - Day
                    - IOC
            expireTime:
                type: string
                format: date-time
            text:
                type: string
            activationTime:
                type: string
                format: date-time
    PlaceOrderResult:
        type: object
        properties: 
            failureReason:
                type: string
                description: "AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending, BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable, InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration, MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured, MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired, NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout, SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify, Unauthorized, UnknownReason, Unsupported"
                enum:
                    - Unsupported
                    - InvalidPrice
                    - NoQuote
                    - MaxPosLimitMisconfigured
                    - TooLate
                    - AnotherCommandPending
                    - MultipleAccountPlanRequired
                    - ExecutionProviderNotConfigured
                    - AccountClosed
                    - BackMonthProhibited
                    - NotEnoughLiquidity
                    - UnknownReason
                    - SessionClosed
                    - OtherExecutionRelated
                    - LiquidationOnly
                    - MaxTotalPosLimitReached
                    - LiquidationOnlyBeforeExpiration
                    - Unauthorized
                    - AdvancedTrailingStopUnsupported
                    - RiskCheckTimeout
                    - ParentRejected
                    - MaxPosLimitReached
                    - MaxOrderQtyIsNotSpecified
                    - MaxOrderQtyLimitReached
                    - InvalidContract
                    - Success
                    - TradingLocked
                    - TrailingStopNonOrderQtyModify
                    - ExecutionProviderUnavailable
            failureText:
                type: string
            orderId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Order"
    PlaceOsoResult:
        type: object
        properties: 
            failureReason:
                type: string
                description: "AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending, BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable, InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration, MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured, MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired, NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout, SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify, Unauthorized, UnknownReason, Unsupported"
                enum:
                    - Unsupported
                    - InvalidPrice
                    - NoQuote
                    - MaxPosLimitMisconfigured
                    - TooLate
                    - AnotherCommandPending
                    - MultipleAccountPlanRequired
                    - ExecutionProviderNotConfigured
                    - AccountClosed
                    - BackMonthProhibited
                    - NotEnoughLiquidity
                    - UnknownReason
                    - SessionClosed
                    - OtherExecutionRelated
                    - LiquidationOnly
                    - MaxTotalPosLimitReached
                    - LiquidationOnlyBeforeExpiration
                    - Unauthorized
                    - AdvancedTrailingStopUnsupported
                    - RiskCheckTimeout
                    - ParentRejected
                    - MaxPosLimitReached
                    - MaxOrderQtyIsNotSpecified
                    - MaxOrderQtyLimitReached
                    - InvalidContract
                    - Success
                    - TradingLocked
                    - TrailingStopNonOrderQtyModify
                    - ExecutionProviderUnavailable
            failureText:
                type: string
            orderId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Order"
            oso1Id:
                type: integer
                format: int32
                minimum: 0
                description: "id of Order"
            oso2Id:
                type: integer
                format: int32
                minimum: 0
                description: "id of Order"
    Position:
        type: object
        required:
            - accountId
            - contractId
            - timestamp
            - tradeDate
            - netPos
            - bought
            - boughtValue
            - sold
            - soldValue
            - prevPos
        properties: 
            id:
                type: integer
                format: int32
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            contractId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Contract"
            timestamp:
                type: string
                format: date-time
            tradeDate:
                $ref: '#/definitions/TradeDate'
            netPos:
                type: integer
                format: int32
            netPrice:
                type: number
                format: double
            bought:
                type: integer
                format: int32
            boughtValue:
                type: number
                format: double
            sold:
                type: integer
                format: int32
            soldValue:
                type: number
                format: double
            prevPos:
                type: integer
                format: int32
            prevPrice:
                type: number
                format: double
    PositionLog:
        type: object
        required:
            - accountId
            - contractId
            - timestamp
            - tradeDate
            - netPos
            - bought
            - boughtValue
            - sold
            - soldValue
            - positionChangeType
        properties: 
            id:
                type: integer
                format: int32
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            contractId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Contract"
            timestamp:
                type: string
                format: date-time
            tradeDate:
                $ref: '#/definitions/TradeDate'
            netPos:
                type: integer
                format: int32
            netPrice:
                type: number
                format: double
            bought:
                type: integer
                format: int32
            boughtValue:
                type: number
                format: double
            sold:
                type: integer
                format: int32
            soldValue:
                type: number
                format: double
            positionChangeType:
                type: string
                description: "CancelledTrade, NewSession, PriceAdjustment, Reconciliation, Trade"
                enum:
                    - Trade
                    - NewSession
                    - PriceAdjustment
                    - Reconciliation
                    - CancelledTrade
            fillId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Fill"
    PostChatMessage:
        type: object
        required:
            - category
            - text
        properties: 
            userId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            category:
                type: string
                description: "Support, TradeDesk"
                enum:
                    - Support
                    - TradeDesk
            text:
                type: string
    Product:
        type: object
        required:
            - name
            - currencyId
            - productType
            - description
            - exchangeId
            - contractGroupId
            - status
            - valuePerPoint
            - priceFormatType
            - priceFormat
            - tickSize
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            currencyId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Currency"
            productType:
                type: string
                description: "Cryptocurrency, Futures, MarketInternals, Options, Spread"
                enum:
                    - Cryptocurrency
                    - Futures
                    - MarketInternals
                    - Options
                    - Spread
            description:
                type: string
            exchangeId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Exchange"
            contractGroupId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of ContractGroup"
            riskDiscountContractGroupId:
                type: integer
                format: int32
                minimum: 0
                description: "id of RiskDiscountContractGroup"
            status:
                type: string
                description: "Inactive, Locked, ReadyForContracts, ReadyToTrade, Verified"
                enum:
                    - ReadyToTrade
                    - Inactive
                    - Verified
                    - Locked
                    - ReadyForContracts
            months:
                type: string
            isSecured:
                type: boolean
            valuePerPoint:
                type: number
                format: double
            priceFormatType:
                type: string
                description: "Decimal, Fractional"
                enum:
                    - Decimal
                    - Fractional
            priceFormat:
                type: integer
                format: int32
            tickSize:
                type: number
                format: double
                minimum: 0
                exclusiveMinimum: true
                description: "Product Tick Size"
    ProductFeeParams:
        type: object
        required:
            - productId
        properties: 
            clearingFee:
                type: number
                format: double
            clearingCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            exchangeFee:
                type: number
                format: double
            exchangeCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            nfaFee:
                type: number
                format: double
            nfaCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            brokerageFee:
                type: number
                format: double
            brokerageCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            ipFee:
                type: number
                format: double
            ipCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            commission:
                type: number
                format: double
            commissionCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            orderRoutingFee:
                type: number
                format: double
            orderRoutingCurrencyId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Currency"
            productId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Product"
            dayMargin:
                type: number
                format: double
            fullMargin:
                $ref: '#/definitions/ProductMargin'
    ProductFeeParamsResponse:
        type: object
        required:
            - params
        properties: 
            params:
                type: array
                items:
                    $ref: '#/definitions/ProductFeeParams'
    ProductMargin:
        type: object
        required:
            - initialMargin
            - maintenanceMargin
            - timestamp
        properties: 
            id:
                type: integer
                format: int32
            initialMargin:
                type: number
                format: double
            maintenanceMargin:
                type: number
                format: double
            timestamp:
                type: string
                format: date-time
    ProductSession:
        type: object
        required:
            - openTime
            - startTime
            - stopTime
            - closeTime
        properties: 
            id:
                type: integer
                format: int32
            openTime:
                $ref: '#/definitions/TradeTime'
            startTime:
                $ref: '#/definitions/TradeTime'
            stopTime:
                $ref: '#/definitions/TradeTime'
            closeTime:
                $ref: '#/definitions/TradeTime'
            sundayOpenTime:
                $ref: '#/definitions/TradeTime'
    Property:
        type: object
        required:
            - name
            - propertyType
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            propertyType:
                type: string
                description: "Boolean, Enum, Integer, String"
                enum:
                    - String
                    - Boolean
                    - Integer
                    - Enum
            enumOptions:
                type: string
            defaultValue:
                type: string
    RenewAccessToken:
        type: object
    RequestTradingPermission:
        type: object
        required:
            - accountId
            - ctaContact
            - ctaEmail
        properties: 
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            ctaContact:
                type: string
            ctaEmail:
                type: string
    ResetAlert:
        type: object
        required:
            - alertId
        properties: 
            alertId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Alert"
    RestrainedOrderVersion:
        type: object
        required:
            - action
            - orderType
        properties: 
            action:
                type: string
                description: "Buy, Sell"
                enum:
                    - Buy
                    - Sell
            clOrdId:
                type: string
            orderType:
                type: string
                description: "Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit"
                enum:
                    - Limit
                    - Market
                    - TrailingStopLimit
                    - StopLimit
                    - TrailingStop
                    - MIT
                    - QTS
                    - Stop
            price:
                type: number
                format: double
            stopPrice:
                type: number
                format: double
            maxShow:
                type: integer
                format: int32
            pegDifference:
                type: number
                format: double
            timeInForce:
                type: string
                description: "Day, FOK, GTC, GTD, IOC"
                enum:
                    - GTD
                    - FOK
                    - GTC
                    - Day
                    - IOC
            expireTime:
                type: string
                format: date-time
            text:
                type: string
    RevokeTradingPermission:
        type: object
        required:
            - tradingPermissionId
        properties: 
            tradingPermissionId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of TradingPermission"
    RollContract:
        type: object
        required:
            - name
            - forward
        properties: 
            name:
                type: string
            forward:
                type: boolean
            ifExpired:
                type: boolean
    RollContractResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            contract:
                $ref: '#/definitions/Contract'
    SetLastNewsReadStatus:
        type: object
        properties: 
            newsStoryId:
                type: integer
                format: int32
                minimum: 0
                description: "id of NewsStory"
    SignUpOrganizationMember:
        type: object
        required:
            - name
            - email
            - password
            - firstName
            - lastName
        properties: 
            name:
                type: string
            email:
                type: string
            password:
                type: string
            firstName:
                type: string
            lastName:
                type: string
    SignUpResponse:
        type: object
        required:
            - errorCode
            - emailVerified
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            errorCode:
                type: string
                description: "DataError, EmailAlreadyRegistered, EmailPolicyFailed, FailedRecaptcha, Success, UnknownError, UserAlreadyExists, WeakPassword, WrongChallenge, WrongChallengeOrigin"
                enum:
                    - WeakPassword
                    - UnknownError
                    - UserAlreadyExists
                    - EmailPolicyFailed
                    - FailedRecaptcha
                    - DataError
                    - EmailAlreadyRegistered
                    - WrongChallengeOrigin
                    - Success
                    - WrongChallenge
            userId:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
            emailVerified:
                type: boolean
    SpreadDefinition:
        type: object
        required:
            - timestamp
            - spreadType
            - uds
        properties: 
            id:
                type: integer
                format: int32
            timestamp:
                type: string
                format: date-time
            spreadType:
                type: string
                description: "Bundle, BundleSpread, Butterfly, CalendarSpread, Condor, Crack, DoubleButterfly, General, IntercommoditySpread, LaggedIntercommoditySpread, Pack, PackButterfly, PackSpread, ReducedTickCalendarSpread, ReverseIntercommoditySpread, ReverseSpread, Strip, TreasuryIntercommoditySpread"
                enum:
                    - ReverseIntercommoditySpread
                    - Strip
                    - ReducedTickCalendarSpread
                    - TreasuryIntercommoditySpread
                    - LaggedIntercommoditySpread
                    - DoubleButterfly
                    - BundleSpread
                    - PackButterfly
                    - ReverseSpread
                    - Pack
                    - Crack
                    - General
                    - Condor
                    - PackSpread
                    - CalendarSpread
                    - Bundle
                    - Butterfly
                    - IntercommoditySpread
            uds:
                type: boolean
    StartOrderStrategy:
        type: object
        required:
            - symbol
            - orderStrategyTypeId
            - action
        properties: 
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            accountSpec:
                type: string
            symbol:
                type: string
            orderStrategyTypeId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of OrderStrategyType"
            action:
                type: string
                description: "Buy, Sell"
                enum:
                    - Buy
                    - Sell
            params:
                type: string
            uuid:
                type: string
    SyncMessage:
        type: object
        required:
            - users
            - contractGroups
        properties: 
            users:
                type: array
                items:
                    $ref: '#/definitions/User'
            accounts:
                type: array
                items:
                    $ref: '#/definitions/Account'
            cashBalances:
                type: array
                items:
                    $ref: '#/definitions/CashBalance'
            currencies:
                type: array
                items:
                    $ref: '#/definitions/Currency'
            positions:
                type: array
                items:
                    $ref: '#/definitions/Position'
            fillPairs:
                type: array
                items:
                    $ref: '#/definitions/FillPair'
            orders:
                type: array
                items:
                    $ref: '#/definitions/Order'
            contracts:
                type: array
                items:
                    $ref: '#/definitions/Contract'
            contractMaturities:
                type: array
                items:
                    $ref: '#/definitions/ContractMaturity'
            products:
                type: array
                items:
                    $ref: '#/definitions/Product'
            exchanges:
                type: array
                items:
                    $ref: '#/definitions/Exchange'
            spreadDefinitions:
                type: array
                items:
                    $ref: '#/definitions/SpreadDefinition'
            commands:
                type: array
                items:
                    $ref: '#/definitions/Command'
            commandReports:
                type: array
                items:
                    $ref: '#/definitions/CommandReport'
            executionReports:
                type: array
                items:
                    $ref: '#/definitions/ExecutionReport'
            orderVersions:
                type: array
                items:
                    $ref: '#/definitions/OrderVersion'
            fills:
                type: array
                items:
                    $ref: '#/definitions/Fill'
            orderStrategies:
                type: array
                items:
                    $ref: '#/definitions/OrderStrategy'
            orderStrategyLinks:
                type: array
                items:
                    $ref: '#/definitions/OrderStrategyLink'
            userProperties:
                type: array
                items:
                    $ref: '#/definitions/UserProperty'
            properties:
                type: array
                items:
                    $ref: '#/definitions/Property'
            userPlugins:
                type: array
                items:
                    $ref: '#/definitions/UserPlugin'
            userReadStatuses:
                type: array
                items:
                    $ref: '#/definitions/UserReadStatus'
            contractGroups:
                type: array
                items:
                    $ref: '#/definitions/ContractGroup'
            orderStrategyTypes:
                type: array
                items:
                    $ref: '#/definitions/OrderStrategyType'
    SyncRequest:
        type: object
        properties: 
            users:
                type: array
                items:
                    type: integer
            accounts:
                type: array
                items:
                    type: integer
    TakeAlertSignalOwnership:
        type: object
        required:
            - adminAlertSignalId
        properties: 
            adminAlertSignalId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of AdminAlertSignal"
    TradingPermission:
        type: object
        required:
            - userId
            - accountId
            - accountHolderContact
            - accountHolderEmail
            - ctaContact
            - ctaEmail
            - status
        properties: 
            id:
                type: integer
                format: int32
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
            accountHolderContact:
                type: string
            accountHolderEmail:
                type: string
            ctaContact:
                type: string
            ctaEmail:
                type: string
            status:
                type: string
                description: "Accepted, Approved, Declined, Requested, Revoked"
                enum:
                    - Declined
                    - Revoked
                    - Approved
                    - Requested
                    - Accepted
            updated:
                type: string
                format: date-time
            approvedById:
                type: integer
                format: int32
                minimum: 0
                description: "id of User"
    TradingPermissionResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            tradingPermission:
                $ref: '#/definitions/TradingPermission'
    TradingPermissionsResponse:
        type: object
        required:
            - tradingPermissions
        properties: 
            tradingPermissions:
                type: array
                items:
                    $ref: '#/definitions/TradingPermission'
    TradovateSubscription:
        type: object
        required:
            - userId
            - timestamp
            - planPrice
            - tradovateSubscriptionPlanId
            - startDate
            - expirationDate
            - paidAmount
        properties: 
            id:
                type: integer
                format: int32
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            timestamp:
                type: string
                format: date-time
            planPrice:
                type: number
                format: double
            creditCardTransactionId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CreditCardTransaction"
            cashBalanceLogId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CashBalanceLog"
            creditCardId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CreditCard"
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            tradovateSubscriptionPlanId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of TradovateSubscriptionPlan"
            startDate:
                $ref: '#/definitions/TradeDate'
            expirationDate:
                $ref: '#/definitions/TradeDate'
            paidAmount:
                type: number
                format: double
            cancelledRenewal:
                type: boolean
            cancelReason:
                type: string
    TradovateSubscriptionPlan:
        type: object
        required:
            - name
            - title
            - price
            - category
            - trial
            - duration
            - durationUnits
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            title:
                type: string
            price:
                type: number
                format: double
            startDate:
                $ref: '#/definitions/TradeDate'
            discontinuedDate:
                $ref: '#/definitions/TradeDate'
            category:
                type: string
            trial:
                type: boolean
            duration:
                type: integer
                format: int32
            durationUnits:
                type: string
                description: "Month, Quarter, Week, Year"
                enum:
                    - Month
                    - Quarter
                    - Year
                    - Week
            riskCategoryId:
                type: integer
                format: int32
                minimum: 0
                description: "id of RiskCategory"
            multipleAccounts:
                type: boolean
            organizationId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Organization"
            replaySessions:
                type: integer
                format: int32
            footnote:
                type: string
    TradovateSubscriptionResponse:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            errorCode:
                type: string
                description: "ConflictWithExisting, DowngradeNotAllowed, IncompatibleCMEMarketDataSubscriptionPlans, IncorrectPaymentMethod, InsufficientFunds, PaymentProviderError, PlanDiscontinued, SingleTrialOnly, Success, UnknownError"
                enum:
                    - IncorrectPaymentMethod
                    - UnknownError
                    - IncompatibleCMEMarketDataSubscriptionPlans
                    - InsufficientFunds
                    - ConflictWithExisting
                    - PaymentProviderError
                    - PlanDiscontinued
                    - DowngradeNotAllowed
                    - SingleTrialOnly
                    - Success
            tradovateSubscription:
                $ref: '#/definitions/TradovateSubscription'
    User:
        type: object
        required:
            - name
            - timestamp
            - email
            - status
            - professional
        properties: 
            id:
                type: integer
                format: int32
            name:
                type: string
            timestamp:
                type: string
                format: date-time
            email:
                type: string
            status:
                type: string
                description: "Active, Closed, Initiated, TemporaryLocked, UnconfirmedEmail"
                enum:
                    - TemporaryLocked
                    - Active
                    - Initiated
                    - UnconfirmedEmail
                    - Closed
            professional:
                type: boolean
            organizationId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Organization"
    UserAccountAutoLiq:
        type: object
        properties: 
            id:
                type: integer
                format: int32
            marginPercentageAlert:
                type: number
                format: double
                description: "Margin % for an Alert"
            dailyLossPercentageAlert:
                type: number
                format: double
                description: "Daily Loss % for an Alert"
            dailyLossAlert:
                type: number
                format: double
                description: "$ Daily Loss for an Alert"
            marginPercentageLiqOnly:
                type: number
                format: double
                description: "Margin % for an Liq Only"
            dailyLossPercentageLiqOnly:
                type: number
                format: double
                description: "Daily Loss % for an Liq Only"
            dailyLossLiqOnly:
                type: number
                format: double
                description: "$ Daily Loss for an Liq Only"
            marginPercentageAutoLiq:
                type: number
                format: double
                description: "Margin % for an Auto-Liq"
            dailyLossPercentageAutoLiq:
                type: number
                format: double
                description: "Daily Loss % for an AutoLiq"
            dailyLossAutoLiq:
                type: number
                format: double
                description: "$ Daily Loss for an Auto-Liq"
            weeklyLossAutoLiq:
                type: number
                format: double
                description: "$ Weekly Loss for an Auto-Liq"
            flattenTimestamp:
                type: string
                format: date-time
                description: "Flatten &amp; Cancel"
            trailingMaxDrawdown:
                type: number
                format: double
                description: "$ Trailing Max Drawdown"
            trailingMaxDrawdownLimit:
                type: number
                format: double
                description: "$ Trailing Max Drawdown Limit"
    UserAccountPositionLimit:
        type: object
        required:
            - active
            - totalBy
            - accountId
        properties: 
            id:
                type: integer
                format: int32
            contractId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Contract"
            productId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Product"
            exchangeId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Exchange"
            productType:
                type: string
                description: "Cryptocurrency, Futures, MarketInternals, Options, Spread"
                enum:
                    - Cryptocurrency
                    - Futures
                    - MarketInternals
                    - Options
                    - Spread
            riskDiscountContractGroupId:
                type: integer
                format: int32
                minimum: 0
                description: "id of RiskDiscountContractGroup"
            productVerificationStatus:
                type: string
                description: "Inactive, Locked, ReadyForContracts, ReadyToTrade, Verified"
                enum:
                    - ReadyToTrade
                    - Inactive
                    - Verified
                    - Locked
                    - ReadyForContracts
            contractGroupId:
                type: integer
                format: int32
                minimum: 0
                description: "id of ContractGroup"
            active:
                type: boolean
            riskTimePeriodId:
                type: integer
                format: int32
                minimum: 0
                description: "id of RiskTimePeriod"
            totalBy:
                type: string
                description: "Contract, ContractGroup, DiscountGroup, Exchange, Overall, Product, ProductType"
                enum:
                    - ProductType
                    - DiscountGroup
                    - Product
                    - Overall
                    - Exchange
                    - Contract
                    - ContractGroup
            shortLimit:
                type: integer
                format: int32
            longLimit:
                type: integer
                format: int32
            exposedLimit:
                type: integer
                format: int32
            description:
                type: string
            accountId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Account"
    UserAccountRiskParameter:
        type: object
        required:
            - userAccountPositionLimitId
        properties: 
            id:
                type: integer
                format: int32
            contractId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Contract"
            productId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Product"
            exchangeId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Exchange"
            productType:
                type: string
                description: "Cryptocurrency, Futures, MarketInternals, Options, Spread"
                enum:
                    - Cryptocurrency
                    - Futures
                    - MarketInternals
                    - Options
                    - Spread
            riskDiscountContractGroupId:
                type: integer
                format: int32
                minimum: 0
                description: "id of RiskDiscountContractGroup"
            productVerificationStatus:
                type: string
                description: "Inactive, Locked, ReadyForContracts, ReadyToTrade, Verified"
                enum:
                    - ReadyToTrade
                    - Inactive
                    - Verified
                    - Locked
                    - ReadyForContracts
            contractGroupId:
                type: integer
                format: int32
                minimum: 0
                description: "id of ContractGroup"
            maxOpeningOrderQty:
                type: integer
                format: int32
            maxClosingOrderQty:
                type: integer
                format: int32
            maxBackMonth:
                type: integer
                format: int32
            preExpirationDays:
                type: integer
                format: int32
            marginPercentage:
                type: number
                format: double
            marginDollarValue:
                type: number
                format: double
            hardLimit:
                type: boolean
            userAccountPositionLimitId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of UserAccountPositionLimit"
    UserPlugin:
        type: object
        required:
            - userId
            - timestamp
            - planPrice
            - pluginName
            - approval
            - startDate
            - paidAmount
        properties: 
            id:
                type: integer
                format: int32
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            timestamp:
                type: string
                format: date-time
            planPrice:
                type: number
                format: double
            creditCardTransactionId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CreditCardTransaction"
            cashBalanceLogId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CashBalanceLog"
            creditCardId:
                type: integer
                format: int32
                minimum: 0
                description: "id of CreditCard"
            accountId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Account"
            pluginName:
                type: string
            approval:
                type: boolean
            entitlementId:
                type: integer
                format: int32
                minimum: 0
                description: "id of Entitlement"
            startDate:
                $ref: '#/definitions/TradeDate'
            expirationDate:
                $ref: '#/definitions/TradeDate'
            paidAmount:
                type: number
                format: double
            autorenewal:
                type: boolean
            planCategories:
                type: string
    UserProperty:
        type: object
        required:
            - userId
            - propertyId
        properties: 
            id:
                type: integer
                format: int32
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            propertyId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of Property"
            value:
                type: string
    UserReadStatus:
        type: object
        properties: 
            id:
                type: integer
                format: int32
            newsStoryId:
                type: integer
                format: int32
                minimum: 0
                description: "id of NewsStory"
    UserReadStatusResponse:
        type: object
        required:
            - userReadStatus
        properties: 
            userReadStatus:
                $ref: '#/definitions/UserReadStatus'
    UserSession:
        type: object
        required:
            - userId
            - startTime
        properties: 
            id:
                type: integer
                format: int32
            userId:
                type: integer
                format: int32
                minimum: 0
                exclusiveMinimum: true
                description: "id of User"
            startTime:
                type: string
                format: date-time
            endTime:
                type: string
                format: date-time
            ipAddress:
                type: string
            appId:
                type: string
            appVersion:
                type: string
    UserSessionStats:
        type: object
        required:
            - lastSessionTime
            - failedPasswords
        properties: 
            id:
                type: integer
                format: int32
            lastSessionTime:
                type: string
                format: date-time
            failedPasswords:
                type: integer
                format: int32
    UserStatusMessage:
        type: object
        properties: 
            errorText:
                type: string
                maxLength: 8192
                description: "Non-empty if the request failed"
            status:
                type: string
                description: "Active, Closed, Initiated, TemporaryLocked, UnconfirmedEmail"
                enum:
                    - TemporaryLocked
                    - Active
                    - Initiated
                    - UnconfirmedEmail
                    - Closed
